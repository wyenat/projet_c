ppm_check_header:
	 presence de P5 ou P6 dans l'entete... PASS
	 presence des dimensions HxV dans l'entete... 11x11
	 presence de 255 dans l'entete... PASS

ppm2blabla v4 (22/05/18)
[MCU #0] Valeurs RGB initiales:
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    

ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
ff0000 00ff00 0000ff ff0000 00ff00 0000ff ff0000 00ff00    0000ff ff0000 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    

[MCU #0] Conversion RGB -> YCbCr:
[Y]:
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 

	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 

[Cb]:
	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 
	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 
	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 
	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 
	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 
	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 
	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 
	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 

	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 
	55 2c ff 55 2c ff 55 2c    ff 55 2c 2c 2c 2c 2c 2c 
	55 2c ff 55 2c ff 55 2c    ff 55 31 31 31 31 31 31 
	55 2c ff 55 2c ff 55 2c    ff 55 31 31 31 31 31 31 
	55 2c ff 55 2c ff 55 2c    ff 55 31 31 31 31 31 31 
	55 2c ff 55 2c ff 55 2c    ff 55 31 31 31 31 31 31 
	55 2c ff 55 2c ff 55 2c    ff 55 31 31 31 31 31 31 
	55 2c ff 55 2c ff 55 2c    ff 55 31 31 31 31 31 31 

[Cr]:
	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 
	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 
	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 
	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 
	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 
	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 
	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 
	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 

	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 
	ff 15 6b ff 15 6b ff 15    6b ff 15 15 15 15 15 15 
	ff 15 6b ff 15 6b ff 15    6b ff 14 14 14 14 14 14 
	ff 15 6b ff 15 6b ff 15    6b ff 14 14 14 14 14 14 
	ff 15 6b ff 15 6b ff 15    6b ff 14 14 14 14 14 14 
	ff 15 6b ff 15 6b ff 15    6b ff 14 14 14 14 14 14 
	ff 15 6b ff 15 6b ff 15    6b ff 14 14 14 14 14 14 
	ff 15 6b ff 15 6b ff 15    6b ff 14 14 14 14 14 14 

[MCU #0] Downsampling:
[Y]:
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 

	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 96 96 96 96 96 96 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 
	4c 96 1d 4c 96 1d 4c 96    1d 4c 97 97 97 97 97 97 

[Cb]:
	40 aa 95 40 aa 2c 2c 2c 
	40 aa 95 40 aa 2c 2c 2c 
	40 aa 95 40 aa 2c 2c 2c 
	40 aa 95 40 aa 2c 2c 2c 
	40 aa 95 40 aa 2c 2c 2c 
	40 aa 95 40 aa 31 31 31 
	40 aa 95 40 aa 31 31 31 
	40 aa 95 40 aa 31 31 31 

[Cr]:
	8a b5 40 8a b5 15 15 15 
	8a b5 40 8a b5 15 15 15 
	8a b5 40 8a b5 15 15 15 
	8a b5 40 8a b5 15 15 15 
	8a b5 40 8a b5 15 15 15 
	8a b5 40 8a b5 14 14 14 
	8a b5 40 8a b5 14 14 14 
	8a b5 40 8a b5 14 14 14 

[MCU #0] DCT:
[Y]:
	fee0 ffdc 005a ffce 00a8 ff08 ff24 0018    ffed ff01 ff39 ff86 ffd1 0007 001f 0018 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 

	fee0 ffdc 005a ffce 00a8 ff08 ff24 0018    fff1 feff ff38 ff85 ffd1 0008 001f 0019 
	0000 0000 0000 0000 0000 0000 0000 0000    fffe 0000 0000 0000 0000 ffff ffff ffff 
	0000 0000 0000 0000 0000 0000 0000 0000    fffe 0000 0000 0000 0000 ffff ffff ffff 
	0000 0000 0000 0000 0000 0000 0000 0000    ffff 0000 0000 0000 0000 ffff ffff 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 ffff ffff ffff 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 ffff ffff ffff 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 ffff ffff 0000 0000 0000 0000 0000 

[Cb]:
	fef2 00de ff69 ffb7 ffbd ff01 ffa1 00af 
	fff9 0007 fffd ffff 0002 ffff fffe 0001 
	0002 fffd 0001 0000 ffff 0000 0000 ffff 
	0000 ffff 0000 0000 ffff 0000 0000 ffff 
	fffe 0002 ffff ffff 0000 ffff ffff 0000 
	0000 ffff 0000 0000 ffff 0000 0000 ffff 
	0001 fffe 0000 0000 ffff 0000 0000 ffff 
	fffe 0001 ffff ffff 0000 ffff ffff 0000 

[Cr]:
	fefb 0175 ff6d 0043 00bf ff57 ff10 0011 
	0001 fffe 0000 0000 ffff 0000 0000 ffff 
	ffff 0000 ffff ffff 0000 0000 ffff 0000 
	ffff 0000 ffff 0000 0000 0000 0000 0000 
	0000 ffff 0000 0000 ffff 0000 0000 ffff 
	ffff 0000 0000 0000 0000 0000 0000 0000 
	ffff 0000 ffff 0000 0000 0000 0000 0000 
	0000 ffff 0000 0000 ffff 0000 0000 0000 

[MCU #0] ZZ:
[Y]:
	fee0 ffdc 0000 0000 0000 005a ffce 0000    ffed ff01 0000 0000 0000 ff39 ff86 0000 
	0000 0000 0000 0000 0000 0000 00a8 ff08    0000 0000 0000 0000 0000 0000 ffd1 0007 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 ff24 0018 0000 0000 0000    0000 0000 0000 001f 0018 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 

	fee0 ffdc 0000 0000 0000 005a ffce 0000    fff1 feff fffe fffe 0000 ff38 ff85 0000 
	0000 0000 0000 0000 0000 0000 00a8 ff08    0000 ffff 0000 0000 0000 0000 ffd1 0008 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 ffff 0000 
	0000 0000 0000 ff24 0018 0000 0000 0000    0000 0000 ffff 001f 0019 ffff ffff 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 ffff ffff 0000 ffff ffff ffff 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    ffff ffff ffff ffff ffff 0000 0000 ffff 
	0000 0000 0000 0000 0000 0000 0000 0000    ffff 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	fef2 00de fff9 0002 0007 ff69 ffb7 fffd 
	fffd 0000 fffe ffff 0001 ffff ffbd ff01 
	0002 0000 0000 0002 0000 0001 ffff ffff 
	0000 ffff ffff ffa1 00af fffe 0000 ffff 
	ffff 0000 fffe fffe 0001 0000 0000 0000 
	0000 0000 0001 ffff 0000 ffff ffff 0000 
	ffff ffff ffff 0000 ffff ffff 0000 0000 
	0000 0000 ffff 0000 ffff ffff ffff 0000 

[Cr]:
	fefb 0175 0001 ffff fffe ff6d 0043 0000 
	0000 ffff 0000 0000 ffff 0000 00bf ff57 
	ffff ffff ffff ffff ffff ffff 0000 0000 
	0000 0000 0000 ff10 0011 0000 0000 0000 
	0000 0000 0000 0000 ffff ffff 0000 ffff 
	0000 ffff ffff 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 ffff 0000 
	0000 ffff 0000 0000 0000 0000 0000 0000 

[MCU #0] Quantification:
[Y]:
	ffc7 fff4 0000 0000 0000 0007 fffd 0000    fffd ffab 0000 0000 0000 fff0 fff8 0000 
	0000 0000 0000 0000 0000 0000 0009 fff2    0000 0000 0000 0000 0000 0000 fffe 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 ffe8 0001 0000 0000 0000    0000 0000 0000 0003 0001 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 

	ffc7 fff4 0000 0000 0000 0007 fffd 0000    fffd ffab 0000 0000 0000 fff0 fff8 0000 
	0000 0000 0000 0000 0000 0000 0009 fff2    0000 0000 0000 0000 0000 0000 fffe 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 ffe8 0001 0000 0000 0000    0000 0000 0000 0003 0001 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	ffca 002c ffff 0000 0000 fffb fffe 0000 
	0000 0000 0000 0000 0000 0000 fffe fff8 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 fffd 0005 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cr]:
	ffcc 004a 0000 0000 0000 fffc 0002 0000 
	0000 0000 0000 0000 0000 0000 0006 fffb 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 fff8 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[MCU #0] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -57, magnitude = 6, index = 6
		bitstream => writing 14 over 4 bits
		bitstream => writing 6 over 6 bits

AC:
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 116, huffman path = 65455, nbits = 16
		bitstream => writing 65455 over 16 bits
		bitstream => writing 9 over 4 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 181, huffman path = 65491, nbits = 16
		bitstream => writing 65491 over 16 bits
		bitstream => writing 7 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 1
DC:
	value = 54, magnitude = 6, index = 54
		bitstream => writing 14 over 4 bits
		bitstream => writing 54 over 6 bits

AC:
	value = -85, magnitude = 7, index = 42
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 42 over 7 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 114, huffman path = 4087, nbits = 12
		bitstream => writing 4087 over 12 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 194, huffman path = 65497, nbits = 16
		bitstream => writing 65497 over 16 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 2
DC:
	value = -54, magnitude = 6, index = 9
		bitstream => writing 14 over 4 bits
		bitstream => writing 9 over 6 bits

AC:
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 116, huffman path = 65455, nbits = 16
		bitstream => writing 65455 over 16 bits
		bitstream => writing 9 over 4 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 181, huffman path = 65491, nbits = 16
		bitstream => writing 65491 over 16 bits
		bitstream => writing 7 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 3
DC:
	value = 54, magnitude = 6, index = 54
		bitstream => writing 14 over 4 bits
		bitstream => writing 54 over 6 bits

AC:
	value = -85, magnitude = 7, index = 42
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 42 over 7 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 114, huffman path = 4087, nbits = 12
		bitstream => writing 4087 over 12 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 194, huffman path = 65497, nbits = 16
		bitstream => writing 65497 over 16 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -54, magnitude = 6, index = 9
		bitstream => writing 62 over 6 bits
		bitstream => writing 9 over 6 bits

AC:
	value = 44, magnitude = 6, index = 44
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 44 over 6 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 114, huffman path = 2040, nbits = 11
		bitstream => writing 2040 over 11 bits
		bitstream => writing 1 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 7 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 178, huffman path = 65490, nbits = 16
		bitstream => writing 65490 over 16 bits
		bitstream => writing 0 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 5 over 3 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = -52, magnitude = 6, index = 11
		bitstream => writing 62 over 6 bits
		bitstream => writing 11 over 6 bits

AC:
	value = 74, magnitude = 7, index = 74
	RLE code = 7, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 74 over 7 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 115, huffman path = 65455, nbits = 16
		bitstream => writing 65455 over 16 bits
		bitstream => writing 6 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 2 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 180, huffman path = 65492, nbits = 16
		bitstream => writing 65492 over 16 bits
		bitstream => writing 7 over 4 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
