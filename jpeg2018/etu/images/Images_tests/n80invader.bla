ppm_check_header:
	 presence de P5 ou P6 dans l'entete... PASS
	 presence des dimensions HxV dans l'entete... 480x8
	 presence de 255 dans l'entete... PASS

ppm2blabla v4 (22/05/18)
[MCU #0] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #0] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #0] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #0] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #0] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #0] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #0] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 24, magnitude = 5, index = 24
		bitstream => writing 6 over 3 bits
		bitstream => writing 24 over 5 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #1] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #1] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #1] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #1] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #1] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #1] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #1] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #2] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #2] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #2] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #2] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #2] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #2] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #2] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #3] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #3] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #3] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #3] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #3] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #3] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #3] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #4] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #4] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #4] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #4] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #4] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #4] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #4] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #5] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #5] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #5] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #5] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #5] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #5] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #5] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #6] Valeurs "niveaux de gris" initiales:
00 00 00 fc f6 00 00 00    
00 00 ff fc f7 ea 00 00    
00 ff ff fc f6 eb d7 00    
ff ff 00 fc f6 00 d8 c3    
ff ff ff fc f6 eb db c8    
00 00 ff 00 00 ec 00 00    
00 ff 00 fc f6 00 dd 00    
ff 00 ff 00 00 ed 00 cc    

[MCU #6] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 fc f6 00 00 00 
	00 00 ff fc f7 ea 00 00 
	00 ff ff fc f6 eb d7 00 
	ff ff 00 fc f6 00 d8 c3 
	ff ff ff fc f6 eb db c8 
	00 00 ff 00 00 ec 00 00 
	00 ff 00 fc f6 00 dd 00 
	ff 00 ff 00 00 ed 00 cc 

[MCU #6] Downsampling:
[Y]:
	00 00 00 fc f6 00 00 00 
	00 00 ff fc f7 ea 00 00 
	00 ff ff fc f6 eb d7 00 
	ff ff 00 fc f6 00 d8 c3 
	ff ff ff fc f6 eb db c8 
	00 00 ff 00 00 ec 00 00 
	00 ff 00 fc f6 00 dd 00 
	ff 00 ff 00 00 ed 00 cc 

[MCU #6] DCT:
[Y]:
	003f 003d fed0 fffe 0001 ffff ffed ffff 
	0001 fff2 feea fff5 006e fffc ff83 fffb 
	fecc ffe1 ff9d fff9 0042 0008 0090 0006 
	ff46 ffec ffac fffa 0019 0001 0002 0000 
	006d 001a 00ff 001c 00e7 000f 000c 0002 
	ffa9 fffc 0012 0003 007f fff0 fe37 ffed 
	ff7e fff7 0020 fff9 ff5f 0001 00ec 0007 
	00d3 0007 ffaa fff8 ffc3 fff3 ff48 fff7 

[MCU #6] ZZ:
[Y]:
	003f 003d 0001 fecc fff2 fed0 fffe feea 
	ffe1 ff46 006d ffec ff9d fff5 0001 ffff 
	006e fff9 ffac 001a ffa9 ff7e fffc 00ff 
	fffa 0042 fffc ffed ffff ff83 0008 0019 
	001c 0012 fff7 00d3 0007 0020 0003 00e7 
	0001 0090 fffb 0006 0002 000f 007f fff9 
	ffaa fff8 ff5f fff0 000c 0000 0002 fe37 
	0001 ffc3 fff3 00ec ffed 0007 ff48 fff7 

[MCU #6] Quantification:
[Y]:
	000c 0014 0000 ffc3 fffe ffe7 0000 fff1 
	fff9 ffd2 001b fffd fff4 0000 0000 0000 
	001b ffff fff0 0003 fff9 fff9 0000 000f 
	ffff 000d 0000 fffe 0000 fffc 0000 0001 
	0005 0002 0000 000c 0000 0000 0000 000a 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff1 
	0000 fffe 0000 0008 0000 0000 fffb 0000 

[MCU #6] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -12, magnitude = 4, index = 3
		bitstream => writing 5 over 3 bits
		bitstream => writing 3 over 4 bits

AC:
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = -61, magnitude = 6, index = 2
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 2 over 6 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -25, magnitude = 5, index = 6
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 6 over 5 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -46, magnitude = 6, index = 17
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 17 over 6 bits
	value = 27, magnitude = 5, index = 27
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 27 over 5 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 27, magnitude = 5, index = 27
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 27 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 10 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 0 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #7] Valeurs "niveaux de gris" initiales:
00 00 00 7e 76 00 00 00    
00 00 85 7b 75 76 00 00    
00 95 84 79 72 74 78 00    
ab 95 00 79 72 00 77 7f    
b0 99 86 7c 75 73 76 7e    
00 00 8c 00 00 76 00 00    
00 a2 00 85 7d 00 7e 00    
b5 00 97 00 00 83 00 8c    

[MCU #7] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 7e 76 00 00 00 
	00 00 85 7b 75 76 00 00 
	00 95 84 79 72 74 78 00 
	ab 95 00 79 72 00 77 7f 
	b0 99 86 7c 75 73 76 7e 
	00 00 8c 00 00 76 00 00 
	00 a2 00 85 7d 00 7e 00 
	b5 00 97 00 00 83 00 8c 

[MCU #7] Downsampling:
[Y]:
	00 00 00 7e 76 00 00 00 
	00 00 85 7b 75 76 00 00 
	00 95 84 79 72 74 78 00 
	ab 95 00 79 72 00 77 7f 
	b0 99 86 7c 75 73 76 7e 
	00 00 8c 00 00 76 00 00 
	00 a2 00 85 7d 00 7e 00 
	b5 00 97 00 00 83 00 8c 

[MCU #7] DCT:
[Y]:
	fe52 0035 ff9c fffb fffe 0000 fffb fffe 
	ffe1 fff1 ff68 fffa 002c ffff ffb8 fffa 
	ff5b ffe6 ffb6 fffb 0021 0006 0054 0004 
	ff91 fff4 ffc0 fffb 0009 0000 fff9 0000 
	0053 0016 00a6 0016 0090 000c 001d 0002 
	ffd0 fffb 0003 0001 0033 fff2 ff02 ffee 
	ffb6 fff7 0006 fff9 ffae 0004 0082 000a 
	006f 000a ffd7 fffb ffd7 fff5 ff91 fff7 

[MCU #7] ZZ:
[Y]:
	fe52 0035 ffe1 ff5b fff1 ff9c fffb ff68 
	ffe6 ff91 0053 fff4 ffb6 fffa fffe 0000 
	002c fffb ffc0 0016 ffd0 ffb6 fffb 00a6 
	fffb 0021 ffff fffb fffe ffb8 0006 0009 
	0016 0003 fff7 006f 000a 0006 0001 0090 
	0000 0054 fffa 0004 fff9 000c 0033 fff9 
	ffd7 fffb ffae fff2 001d 0000 0002 ff02 
	0004 ffd7 fff5 0082 ffee 000a ff91 fff7 

[MCU #7] Quantification:
[Y]:
	ffaa 0011 fff6 ffdf fffe fff8 0000 fff8 
	fffa ffe5 0014 fffe fff7 0000 0000 0000 
	000b ffff fff4 0003 fffc fffc 0000 0009 
	ffff 0006 0000 0000 0000 fffe 0000 0000 
	0004 0000 0000 0006 0000 0000 0000 0006 
	0000 0007 0000 0000 0000 0000 0001 0000 
	fffe 0000 fffd 0000 0000 0000 0000 fff8 
	0000 ffff 0000 0004 0000 0000 fffd 0000 

[MCU #7] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -98, magnitude = 7, index = 29
		bitstream => writing 30 over 5 bits
		bitstream => writing 29 over 7 bits

AC:
	value = 17, magnitude = 5, index = 17
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 17 over 5 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -33, magnitude = 6, index = 30
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 30 over 6 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 7 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -27, magnitude = 5, index = 4
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 4 over 5 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 4 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 6 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 6 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 7 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 0 over 2 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #8] Valeurs "niveaux de gris" initiales:
00 00 00 d7 e0 00 00 00    
00 00 ba c8 d5 d8 00 00    
00 9f b0 bd c3 c6 c9 00    
89 97 00 af b5 00 b6 b7    
86 93 9c a5 aa aa ab aa    
00 00 9a 00 00 a5 00 00    
00 93 00 a1 a3 00 a3 00    
90 00 9f 00 00 a7 00 a4    

[MCU #8] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 d7 e0 00 00 00 
	00 00 ba c8 d5 d8 00 00 
	00 9f b0 bd c3 c6 c9 00 
	89 97 00 af b5 00 b6 b7 
	86 93 9c a5 aa aa ab aa 
	00 00 9a 00 00 a5 00 00 
	00 93 00 a1 a3 00 a3 00 
	90 00 9f 00 00 a7 00 a4 

[MCU #8] Downsampling:
[Y]:
	00 00 00 d7 e0 00 00 00 
	00 00 ba c8 d5 d8 00 00 
	00 9f b0 bd c3 c6 c9 00 
	89 97 00 af b5 00 b6 b7 
	86 93 9c a5 aa aa ab aa 
	00 00 9a 00 00 a5 00 00 
	00 93 00 a1 a3 00 a3 00 
	90 00 9f 00 00 a7 00 a4 

[MCU #8] DCT:
[Y]:
	ff0d ffd4 ff0b 0007 000e 0000 ffec 0002 
	003d fffe ff10 000c 0057 ffff ffa6 0003 
	ff39 001b ffa2 0007 003c fff9 0063 fffc 
	ff6d 0010 ffc4 fffe 0026 fff9 fffc fffe 
	003b fff2 00b3 ffe9 00af fff7 fff9 0002 
	ffc0 0000 0017 fff6 005f 000a febe 000c 
	ffab 0005 0018 0003 ff94 0005 0089 ffff 
	008c fffb ffc5 0005 ffcf 000a ff81 0004 

[MCU #8] ZZ:
[Y]:
	ff0d ffd4 003d ff39 fffe ff0b 0007 ff10 
	001b ff6d 003b 0010 ffa2 000c 000e 0000 
	0057 0007 ffc4 fff2 ffc0 ffab 0000 00b3 
	fffe 003c ffff ffec 0002 ffa6 fff9 0026 
	ffe9 0017 0005 008c fffb 0018 fff6 00af 
	fff9 0063 0003 fffc fffc fff7 005f 0003 
	ffc5 0005 ff94 000a fff9 fffe 0002 febe 
	0005 ffcf 000a 0089 000c ffff ff81 0004 

[MCU #8] Quantification:
[Y]:
	ffd0 fff2 0014 ffd9 0000 ffec 0000 fff3 
	0006 ffdc 000e 0002 fff5 0000 0000 0000 
	0015 0001 fff4 fffe fffb fffb 0000 000a 
	0000 000c 0000 fffe 0000 fffd 0000 0002 
	fffc 0003 0000 0008 0000 0000 0000 0007 
	ffff 0009 0000 0000 0000 0000 0002 0000 
	fffd 0000 fffc 0000 0000 0000 0000 fff6 
	0000 ffff 0000 0004 0000 0000 fffc 0000 

[MCU #8] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 38, magnitude = 6, index = 38
		bitstream => writing 14 over 4 bits
		bitstream => writing 38 over 6 bits

AC:
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = -39, magnitude = 6, index = 24
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 24 over 6 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 11 over 5 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 2 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -36, magnitude = 6, index = 27
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 27 over 6 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 21, magnitude = 5, index = 21
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 21 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 5 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #9] Valeurs "niveaux de gris" initiales:
00 00 00 e1 e3 00 00 00    
00 00 d4 d1 d3 cf 00 00    
00 c2 c2 c0 bf be be 00    
b5 b4 00 b0 ae 00 ad ad    
a8 a7 a5 a3 9f a0 9c 9e    
00 00 9b 00 00 94 00 00    
00 9c 00 98 93 00 8d 00    
a5 00 9c 00 00 92 00 90    

[MCU #9] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 e1 e3 00 00 00 
	00 00 d4 d1 d3 cf 00 00 
	00 c2 c2 c0 bf be be 00 
	b5 b4 00 b0 ae 00 ad ad 
	a8 a7 a5 a3 9f a0 9c 9e 
	00 00 9b 00 00 94 00 00 
	00 9c 00 98 93 00 8d 00 
	a5 00 9c 00 00 92 00 90 

[MCU #9] Downsampling:
[Y]:
	00 00 00 e1 e3 00 00 00 
	00 00 d4 d1 d3 cf 00 00 
	00 c2 c2 c0 bf be be 00 
	b5 b4 00 b0 ae 00 ad ad 
	a8 a7 a5 a3 9f a0 9c 9e 
	00 00 9b 00 00 94 00 00 
	00 9c 00 98 93 00 8d 00 
	a5 00 9c 00 00 92 00 90 

[MCU #9] DCT:
[Y]:
	ff14 000f ff1c fffe 000f ffff ffe9 0000 
	0053 fff7 ff05 ffff 0051 fffd ffa8 0000 
	ff2c fffe ff8f 0001 0040 0002 0061 0004 
	ff64 fffb ffc0 fffd 002d fffd 0001 fffe 
	0041 0006 00be 0006 00ba 0004 fff4 0001 
	ffc0 fffd 001d ffff 005c fffb fec1 fff9 
	ffab fffd 0012 ffff ff96 0003 0078 0005 
	0088 0002 ffc6 fffe ffc6 fffd ff86 fffb 

[MCU #9] ZZ:
[Y]:
	ff14 000f 0053 ff2c fff7 ff1c fffe ff05 
	fffe ff64 0041 fffb ff8f ffff 000f ffff 
	0051 0001 ffc0 0006 ffc0 ffab fffd 00be 
	fffd 0040 fffd ffe9 0000 ffa8 0002 002d 
	0006 001d fffd 0088 0002 0012 ffff 00ba 
	fffd 0061 0000 0004 0001 0004 005c ffff 
	ffc6 fffe ff96 fffb fff4 fffe 0001 fec1 
	0003 ffc6 fffd 0078 fff9 0005 ff86 fffb 

[MCU #9] Quantification:
[Y]:
	ffd1 0005 001b ffd6 ffff ffed 0000 fff3 
	0000 ffd9 0010 0000 fff2 0000 0000 0000 
	0014 0000 fff4 0000 fffb fffb 0000 000b 
	0000 000c 0000 fffe 0000 fffd 0000 0002 
	0001 0004 0000 0008 0000 0000 0000 0008 
	0000 0008 0000 0000 0000 0000 0002 0000 
	fffd 0000 fffc 0000 0000 0000 0000 fff6 
	0000 fffe 0000 0004 0000 0000 fffd 0000 

[MCU #9] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 1, magnitude = 1, index = 1
		bitstream => writing 2 over 3 bits
		bitstream => writing 1 over 1 bits

AC:
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 27, magnitude = 5, index = 27
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 27 over 5 bits
	value = -42, magnitude = 6, index = 21
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 21 over 6 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 12 over 5 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 2 over 4 bits
	value = -39, magnitude = 6, index = 24
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 24 over 6 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 20 over 5 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 8 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 5 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 0 over 2 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #10] Valeurs "niveaux de gris" initiales:
00 00 00 c7 bf 00 00 00    
00 00 bf b9 b3 ab 00 00    
00 b3 af aa a6 a2 a1 00    
a9 a6 00 a4 9f 00 9e a2    
98 9a 9a 9a 9a 9d a1 a5    
00 00 94 00 00 a1 00 00    
00 91 00 97 a0 00 af 00    
90 00 97 00 00 af 00 c4    

[MCU #10] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 c7 bf 00 00 00 
	00 00 bf b9 b3 ab 00 00 
	00 b3 af aa a6 a2 a1 00 
	a9 a6 00 a4 9f 00 9e a2 
	98 9a 9a 9a 9a 9d a1 a5 
	00 00 94 00 00 a1 00 00 
	00 91 00 97 a0 00 af 00 
	90 00 97 00 00 af 00 c4 

[MCU #10] Downsampling:
[Y]:
	00 00 00 c7 bf 00 00 00 
	00 00 bf b9 b3 ab 00 00 
	00 b3 af aa a6 a2 a1 00 
	a9 a6 00 a4 9f 00 9e a2 
	98 9a 9a 9a 9a 9d a1 a5 
	00 00 94 00 00 a1 00 00 
	00 91 00 97 a0 00 af 00 
	90 00 97 00 00 af 00 c4 

[MCU #10] DCT:
[Y]:
	fee9 fff4 ff3e fff7 0009 fffe fff1 fffb 
	0019 001e ff24 fff8 004b 0005 ffa8 0003 
	ff42 fff0 ffa3 fffb 0037 fffe 0061 fffe 
	ff74 ffff ffba 000b 001b 000b fff8 0004 
	004b fff3 00b7 fffe 00ad fff8 0009 fff3 
	ffc4 0008 000f 000a 0052 0008 fec8 0005 
	ffaa 0001 0013 ffff ff9c fff3 008d fff1 
	0084 fffb ffca fffd ffcd 0001 ff80 0006 

[MCU #10] ZZ:
[Y]:
	fee9 fff4 0019 ff42 001e ff3e fff7 ff24 
	fff0 ff74 004b ffff ffa3 fff8 0009 fffe 
	004b fffb ffba fff3 ffc4 ffaa 0008 00b7 
	000b 0037 0005 fff1 fffb ffa8 fffe 001b 
	fffe 000f 0001 0084 fffb 0013 000a 00ad 
	000b 0061 0003 fffe fff8 fff8 0052 ffff 
	ffca fffd ff9c 0008 0009 0004 fff3 fec8 
	fff3 ffcd 0001 008d 0005 fff1 ff80 0006 

[MCU #10] Quantification:
[Y]:
	ffc9 fffc 0008 ffda 0004 fff0 0000 fff4 
	fffc ffdd 0012 0000 fff5 0000 0000 0000 
	0012 ffff fff2 ffff fffb fffb 0000 000a 
	0002 000b 0000 ffff 0000 fffd 0000 0001 
	0000 0002 0000 0007 0000 0000 0000 0007 
	0001 0008 0000 0000 0000 0000 0002 0000 
	fffd 0000 fffc 0000 0000 0000 0000 fff6 
	0000 ffff 0000 0004 0000 0000 fffc 0000 

[MCU #10] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -8, magnitude = 4, index = 7
		bitstream => writing 5 over 3 bits
		bitstream => writing 7 over 4 bits

AC:
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -38, magnitude = 6, index = 25
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 25 over 6 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -35, magnitude = 6, index = 28
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 28 over 6 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 18 over 5 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 18 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 5 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #11] Valeurs "niveaux de gris" initiales:
00 00 00 a8 a9 00 00 00    
00 00 a2 a2 a4 a5 00 00    
00 a2 a2 a4 a4 a5 a2 00    
a4 a6 00 ab aa 00 a7 a5    
aa ad b2 b7 b6 b5 b1 ac    
00 00 c1 00 00 c3 00 00    
00 cb 00 d5 d6 00 d0 00    
d1 00 e0 00 00 e0 00 d8    

[MCU #11] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 a8 a9 00 00 00 
	00 00 a2 a2 a4 a5 00 00 
	00 a2 a2 a4 a4 a5 a2 00 
	a4 a6 00 ab aa 00 a7 a5 
	aa ad b2 b7 b6 b5 b1 ac 
	00 00 c1 00 00 c3 00 00 
	00 cb 00 d5 d6 00 d0 00 
	d1 00 e0 00 00 e0 00 d8 

[MCU #11] Downsampling:
[Y]:
	00 00 00 a8 a9 00 00 00 
	00 00 a2 a2 a4 a5 00 00 
	00 a2 a2 a4 a4 a5 a2 00 
	a4 a6 00 ab aa 00 a7 a5 
	aa ad b2 b7 b6 b5 b1 ac 
	00 00 c1 00 00 c3 00 00 
	00 cb 00 d5 d6 00 d0 00 
	d1 00 e0 00 00 e0 00 d8 

[MCU #11] DCT:
[Y]:
	ff2a fffb ff3b 0001 fffa 0000 0000 ffff 
	ffb3 0002 ff47 0002 004e ffff ff96 ffff 
	ff42 0000 ffc1 fffe 002d fffe 0076 0001 
	ff79 0000 ffad 0001 0008 0001 ffeb 0000 
	0060 fffe 00c5 fffd 00a8 ffff 002e ffff 
	ffc3 0001 fffa ffff 005a 0001 fe95 0001 
	ff9a 0001 001f ffff ff88 fffe 00d3 fffe 
	009e fffe ffbd 0000 ffdc 0001 ff61 0000 

[MCU #11] ZZ:
[Y]:
	ff2a fffb ffb3 ff42 0002 ff3b 0001 ff47 
	0000 ff79 0060 0000 ffc1 0002 fffa 0000 
	004e fffe ffad fffe ffc3 ff9a 0001 00c5 
	0001 002d ffff 0000 ffff ff96 fffe 0008 
	fffd fffa 0001 009e fffe 001f ffff 00a8 
	0001 0076 ffff 0001 ffeb ffff 005a ffff 
	ffbd 0000 ff88 0001 002e 0000 ffff fe95 
	fffe ffdc 0001 00d3 0001 fffe ff61 0000 

[MCU #11] Quantification:
[Y]:
	ffd6 ffff ffe7 ffda 0000 fff0 0000 fff6 
	0000 ffdf 0018 0000 fff9 0000 0000 0000 
	0013 0000 fff0 0000 fffb fffa 0000 000b 
	0000 0009 0000 0000 0000 fffc 0000 0000 
	0000 0000 0000 0009 0000 0000 0000 0007 
	0000 000a 0000 0000 0000 0000 0002 0000 
	fffc 0000 fffb 0000 0001 0000 0000 fff4 
	0000 ffff 0000 0007 0000 0000 fffb 0000 

[MCU #11] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 13, magnitude = 4, index = 13
		bitstream => writing 5 over 3 bits
		bitstream => writing 13 over 4 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -25, magnitude = 5, index = 6
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 6 over 5 bits
	value = -38, magnitude = 6, index = 25
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 25 over 6 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 5 over 4 bits
	value = -33, magnitude = 6, index = 30
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 30 over 6 bits
	value = 24, magnitude = 5, index = 24
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 24 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = 19, magnitude = 5, index = 19
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 19 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 3 over 3 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 84, huffman path = 65439, nbits = 16
		bitstream => writing 65439 over 16 bits
		bitstream => writing 9 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 3 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #12] Valeurs "niveaux de gris" initiales:
00 00 00 be c6 00 00 00    
00 00 ad b4 b9 c1 00 00    
00 a4 a5 aa b0 b8 bf 00    
a4 a3 00 a4 a9 00 b6 bd    
aa a7 a4 a2 a4 a8 af b5    
00 00 a9 00 00 a7 00 00    
00 b8 00 ad aa 00 ab 00    
cf 00 be 00 00 af 00 b2    

[MCU #12] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 be c6 00 00 00 
	00 00 ad b4 b9 c1 00 00 
	00 a4 a5 aa b0 b8 bf 00 
	a4 a3 00 a4 a9 00 b6 bd 
	aa a7 a4 a2 a4 a8 af b5 
	00 00 a9 00 00 a7 00 00 
	00 b8 00 ad aa 00 ab 00 
	cf 00 be 00 00 af 00 b2 

[MCU #12] Downsampling:
[Y]:
	00 00 00 be c6 00 00 00 
	00 00 ad b4 b9 c1 00 00 
	00 a4 a5 aa b0 b8 bf 00 
	a4 a3 00 a4 a9 00 b6 bd 
	aa a7 a4 a2 a4 a8 af b5 
	00 00 a9 00 00 a7 00 00 
	00 b8 00 ad aa 00 ab 00 
	cf 00 be 00 00 af 00 b2 

[MCU #12] DCT:
[Y]:
	ff17 fff5 ff43 0007 0005 0002 fff4 0004 
	0001 ffeb ff21 0007 004a fffc ffa0 fffe 
	ff37 0019 ffa1 0006 0038 ffff 006c 0000 
	ff6d 0004 ffb4 fff8 0018 fff6 fff5 fffb 
	0058 0001 00c9 fff7 00b6 0002 0014 0009 
	ffc0 fffa 0009 fff7 0053 fffd feb0 0001 
	ffa4 0001 0012 0004 ff95 0009 00a2 0008 
	0090 ffff ffc7 0005 ffcd 0001 ff74 fffe 

[MCU #12] ZZ:
[Y]:
	ff17 fff5 0001 ff37 ffeb ff43 0007 ff21 
	0019 ff6d 0058 0004 ffa1 0007 0005 0002 
	004a 0006 ffb4 0001 ffc0 ffa4 fffa 00c9 
	fff8 0038 fffc fff4 0004 ffa0 ffff 0018 
	fff7 0009 0001 0090 ffff 0012 fff7 00b6 
	fff6 006c fffe 0000 fff5 0002 0053 0004 
	ffc7 0005 ff95 fffd 0014 fffb 0009 feb0 
	0009 ffcd 0001 00a2 0001 0008 ff74 fffe 

[MCU #12] Quantification:
[Y]:
	ffd2 fffd 0000 ffd8 fffd fff1 0000 fff4 
	0006 ffdc 0016 0000 fff5 0000 0000 0000 
	0012 0001 fff1 0000 fffb fffb 0000 000b 
	fffe 000b 0000 ffff 0000 fffd 0000 0001 
	ffff 0001 0000 0008 0000 0000 0000 0007 
	ffff 0009 0000 0000 0000 0000 0002 0000 
	fffd 0000 fffc 0000 0000 0000 0000 fff5 
	0000 ffff 0000 0005 0000 0000 fffc 0000 

[MCU #12] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -4, magnitude = 3, index = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits

AC:
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -40, magnitude = 6, index = 23
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 23 over 6 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -36, magnitude = 6, index = 27
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 27 over 6 bits
	value = 22, magnitude = 5, index = 22
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 22 over 5 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 18 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 4 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 5 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #13] Valeurs "niveaux de gris" initiales:
00 00 00 f9 fd 00 00 00    
00 00 f0 f6 f9 fc 00 00    
00 df e7 ee f4 f9 fc 00    
c9 d4 00 e8 ef 00 fa fd    
bf cb d6 df e9 f2 f8 fb    
00 00 ce 00 00 ee 00 00    
00 c1 00 d7 e1 00 f3 00    
b8 00 cb 00 00 ea 00 f9    

[MCU #13] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 f9 fd 00 00 00 
	00 00 f0 f6 f9 fc 00 00 
	00 df e7 ee f4 f9 fc 00 
	c9 d4 00 e8 ef 00 fa fd 
	bf cb d6 df e9 f2 f8 fb 
	00 00 ce 00 00 ee 00 00 
	00 c1 00 d7 e1 00 f3 00 
	b8 00 cb 00 00 ea 00 f9 

[MCU #13] Downsampling:
[Y]:
	00 00 00 f9 fd 00 00 00 
	00 00 f0 f6 f9 fc 00 00 
	00 df e7 ee f4 f9 fc 00 
	c9 d4 00 e8 ef 00 fa fd 
	bf cb d6 df e9 f2 f8 fb 
	00 00 ce 00 00 ee 00 00 
	00 c1 00 d7 e1 00 f3 00 
	b8 00 cb 00 00 ea 00 f9 

[MCU #13] DCT:
[Y]:
	000e ffbc fee7 0004 0005 0000 ffe8 ffff 
	0023 001a fee2 0004 0065 0004 ff8c 0006 
	fed5 001b ff8f 0001 0045 fff7 0088 fff8 
	ff43 000f ffae 000a 0021 0003 0005 0000 
	0066 ffe1 00fa ffe5 00e8 ffef 0003 fffb 
	ffad 0007 0019 fffe 0076 0013 fe52 0016 
	ff87 000a 0019 0008 ff6c fff6 00c9 ffef 
	00c2 fff3 ffb1 0006 ffbb 000c ff56 000a 

[MCU #13] ZZ:
[Y]:
	000e ffbc 0023 fed5 001a fee7 0004 fee2 
	001b ff43 0066 000f ff8f 0004 0005 0000 
	0065 0001 ffae ffe1 ffad ff87 0007 00fa 
	000a 0045 0004 ffe8 ffff ff8c fff7 0021 
	ffe5 0019 000a 00c2 fff3 0019 fffe 00e8 
	0003 0088 0006 fff8 0005 ffef 0076 0008 
	ffb1 0006 ff6c 0013 0003 0000 fffb fe52 
	fff6 ffbb 000c 00c9 0016 ffef ff56 000a 

[MCU #13] Quantification:
[Y]:
	0002 ffea 000b ffc5 0003 ffe9 0000 fff1 
	0006 ffd1 0019 0002 fff2 0000 0000 0000 
	0019 0000 fff0 fffc fffa fff9 0000 000e 
	0002 000d 0000 fffe 0000 fffc 0000 0001 
	fffb 0003 0000 000b 0000 0000 0000 000a 
	0000 000c 0000 0000 0000 0000 0003 0000 
	fffb 0000 fffa 0000 0000 0000 0000 fff2 
	0000 fffe 0000 0006 0000 0000 fffb 0000 

[MCU #13] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 48, magnitude = 6, index = 48
		bitstream => writing 14 over 4 bits
		bitstream => writing 48 over 6 bits

AC:
	value = -22, magnitude = 5, index = 9
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 9 over 5 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -59, magnitude = 6, index = 4
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 4 over 6 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 8 over 5 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -47, magnitude = 6, index = 16
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 16 over 6 bits
	value = 25, magnitude = 5, index = 25
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 25 over 5 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = 25, magnitude = 5, index = 25
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 25 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 14 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 10 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 1 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 6 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #14] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
fe ff 00 ff ff 00 ff ff    
fe ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 fe 00 ff ff 00 ff 00    
fc 00 ff 00 00 ff 00 ff    

[MCU #14] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	fe ff 00 ff ff 00 ff ff 
	fe ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 fe 00 ff ff 00 ff 00 
	fc 00 ff 00 00 ff 00 ff 

[MCU #14] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	fe ff 00 ff ff 00 ff ff 
	fe ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 fe 00 ff ff 00 ff 00 
	fc 00 ff 00 00 ff 00 ff 

[MCU #14] DCT:
[Y]:
	007a ffff fee2 ffff ffff ffff ffeb ffff 
	fffa 0000 fedb 0000 006a 0000 ff7d 0000 
	feb2 ffff ff8b ffff 0044 0000 0099 0000 
	ff36 0000 ffa0 0000 0019 0000 0004 0000 
	007f ffff 011b ffff 00fe ffff 0013 ffff 
	ffa6 0000 0013 0000 007d 0000 fe1f 0000 
	ff76 0000 001a ffff ff59 ffff 00f3 ffff 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #14] ZZ:
[Y]:
	007a ffff fffa feb2 0000 fee2 ffff fedb 
	ffff ff36 007f 0000 ff8b 0000 ffff ffff 
	006a ffff ffa0 ffff ffa6 ff76 0000 011b 
	0000 0044 0000 ffeb ffff ff7d 0000 0019 
	ffff 0013 0000 00dc 0000 001a 0000 00fe 
	0000 0099 0000 0000 0004 ffff 007d ffff 
	ffa8 0000 ff59 0000 0013 0000 ffff fe1f 
	ffff ffb9 0000 00f3 0000 ffff ff3c 0000 

[MCU #14] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #14] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 22, magnitude = 5, index = 22
		bitstream => writing 6 over 3 bits
		bitstream => writing 22 over 5 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #15] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #15] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #15] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #15] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #15] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #15] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #15] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #16] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #16] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #16] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #16] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #16] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #16] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #16] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #17] Valeurs "niveaux de gris" initiales:
00 00 00 fc f7 00 00 00    
00 00 fe fa f4 ea 00 00    
00 ff fd f8 f1 e5 d8 00    
ff ff 00 f7 ec 00 d2 c3    
ff ff fb f5 e9 dd cd be    
00 00 f9 00 00 d9 00 00    
00 fc 00 ef e3 00 c4 00    
ff 00 f5 00 00 d0 00 b2    

[MCU #17] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 fc f7 00 00 00 
	00 00 fe fa f4 ea 00 00 
	00 ff fd f8 f1 e5 d8 00 
	ff ff 00 f7 ec 00 d2 c3 
	ff ff fb f5 e9 dd cd be 
	00 00 f9 00 00 d9 00 00 
	00 fc 00 ef e3 00 c4 00 
	ff 00 f5 00 00 d0 00 b2 

[MCU #17] Downsampling:
[Y]:
	00 00 00 fc f7 00 00 00 
	00 00 fe fa f4 ea 00 00 
	00 ff fd f8 f1 e5 d8 00 
	ff ff 00 f7 ec 00 d2 c3 
	ff ff fb f5 e9 dd cd be 
	00 00 f9 00 00 d9 00 00 
	00 fc 00 ef e3 00 c4 00 
	ff 00 f5 00 00 d0 00 b2 

[MCU #17] DCT:
[Y]:
	001f 004e feda fff9 0004 ffff ffe9 0000 
	0017 ffe3 fee9 fff8 0068 fffb ff89 fff8 
	fece ffe2 ff96 fffe 0043 000a 0089 000a 
	ff48 ffea ffae fff7 001d fffc 0007 fffe 
	0068 0022 00fa 001f 00e6 0014 0004 0005 
	ffac fff7 0017 0002 007b ffe9 fe49 ffe5 
	ff83 fff4 001c fff8 ff65 0008 00d7 0012 
	00ca 000c ffad fff7 ffc0 fff0 ff51 fff4 

[MCU #17] ZZ:
[Y]:
	001f 004e 0017 fece ffe3 feda fff9 fee9 
	ffe2 ff48 0068 ffea ff96 fff8 0004 ffff 
	0068 fffe ffae 0022 ffac ff83 fff7 00fa 
	fff7 0043 fffb ffe9 0000 ff89 000a 001d 
	001f 0017 fff4 00ca 000c 001c 0002 00e6 
	fffc 0089 fff8 000a 0007 0014 007b fff8 
	ffad fff7 ff65 ffe9 0004 fffe 0005 fe49 
	0008 ffc0 fff0 00d7 ffe5 0012 ff51 fff4 

[MCU #17] Quantification:
[Y]:
	0006 001a 0007 ffc3 fffc ffe8 0000 fff1 
	fff9 ffd2 001a fffd fff3 0000 0000 0000 
	001a 0000 fff0 0004 fff9 fff9 0000 000e 
	fffe 000d 0000 fffe 0000 fffc 0000 0001 
	0006 0003 ffff 000b 0000 0000 0000 000a 
	0000 000c 0000 0000 0000 0000 0003 0000 
	fffb 0000 fffa 0000 0000 0000 0000 fff2 
	0000 fffe 0000 0007 0000 0000 fffb 0000 

[MCU #17] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -18, magnitude = 5, index = 13
		bitstream => writing 6 over 3 bits
		bitstream => writing 13 over 5 bits

AC:
	value = 26, magnitude = 5, index = 26
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 26 over 5 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -61, magnitude = 6, index = 2
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 2 over 6 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 7 over 5 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -46, magnitude = 6, index = 17
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 17 over 6 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 26 over 5 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 14 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 10 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 1 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #18] Valeurs "niveaux de gris" initiales:
00 00 00 aa ab 00 00 00    
00 00 ac a7 a8 ad 00 00    
00 ae a9 a4 a5 ae b9 00    
b5 ac 00 a3 a7 00 bd ca    
b0 a7 a3 a4 aa b5 c3 d2    
00 00 a3 00 00 b8 00 00    
00 a5 00 a9 b2 00 cf 00    
a8 00 a3 00 00 c2 00 e0    

[MCU #18] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 aa ab 00 00 00 
	00 00 ac a7 a8 ad 00 00 
	00 ae a9 a4 a5 ae b9 00 
	b5 ac 00 a3 a7 00 bd ca 
	b0 a7 a3 a4 aa b5 c3 d2 
	00 00 a3 00 00 b8 00 00 
	00 a5 00 a9 b2 00 cf 00 
	a8 00 a3 00 00 c2 00 e0 

[MCU #18] Downsampling:
[Y]:
	00 00 00 aa ab 00 00 00 
	00 00 ac a7 a8 ad 00 00 
	00 ae a9 a4 a5 ae b9 00 
	b5 ac 00 a3 a7 00 bd ca 
	b0 a7 a3 a4 aa b5 c3 d2 
	00 00 a3 00 00 b8 00 00 
	00 a5 00 a9 b2 00 cf 00 
	a8 00 a3 00 00 c2 00 e0 

[MCU #18] DCT:
[Y]:
	ff1b ffd6 ff61 0002 fffe 0000 fff4 fffe 
	ffea 001a ff34 ffff 0040 0003 ffa5 0005 
	ff1b 0005 ffa1 fffe 0030 fff9 006b fffa 
	ff71 0008 ffb2 0008 000f 0005 fffd 0003 
	0065 ffeb 00d4 fff3 00bb fff3 0019 fff8 
	ffc2 0007 0008 0002 004c 000e feaf 0010 
	ff9d 0006 000c 0002 ff90 fff5 00aa fff0 
	0097 fff6 ffc7 0002 ffca 0008 ff73 0008 

[MCU #18] ZZ:
[Y]:
	ff1b ffd6 ffea ff1b 001a ff61 0002 ff34 
	0005 ff71 0065 0008 ffa1 ffff fffe 0000 
	0040 fffe ffb2 ffeb ffc2 ff9d 0007 00d4 
	0008 0030 0003 fff4 fffe ffa5 fff9 000f 
	fff3 0008 0006 0097 fff6 000c 0002 00bb 
	0005 006b 0005 fffa fffd fff3 004c 0002 
	ffc7 0002 ff90 000e 0019 0003 fff8 feaf 
	fff5 ffca 0008 00aa 0010 fff0 ff73 0008 

[MCU #18] Quantification:
[Y]:
	ffd3 fff2 fff9 ffd3 0003 fff3 0000 fff5 
	0001 ffdd 0019 0001 fff5 0000 0000 0000 
	0010 0000 fff1 fffd fffb fffb 0000 000c 
	0002 0009 0000 ffff 0000 fffd 0000 0000 
	fffe 0001 0000 0008 0000 0000 0000 0008 
	0000 0009 0000 0000 0000 0000 0002 0000 
	fffd 0000 fffc 0000 0000 0000 0000 fff5 
	0000 ffff 0000 0005 0000 0000 fffc 0000 

[MCU #18] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -51, magnitude = 6, index = 12
		bitstream => writing 14 over 4 bits
		bitstream => writing 12 over 6 bits

AC:
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -45, magnitude = 6, index = 18
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 18 over 6 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -35, magnitude = 6, index = 28
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 28 over 6 bits
	value = 25, magnitude = 5, index = 25
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 25 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 16 over 5 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 8 over 4 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 4 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 5 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #19] Valeurs "niveaux de gris" initiales:
00 00 00 f2 f8 00 00 00    
00 00 eb f3 f9 fe 00 00    
00 e1 ed f6 fb fe ff 00    
da e8 00 f9 fd 00 ff ff    
e0 ea f6 fb ff ff ff ff    
00 00 f8 00 00 ff 00 00    
00 f4 00 ff ff 00 ff 00    
ef 00 fc 00 00 ff 00 ff    

[MCU #19] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 f2 f8 00 00 00 
	00 00 eb f3 f9 fe 00 00 
	00 e1 ed f6 fb fe ff 00 
	da e8 00 f9 fd 00 ff ff 
	e0 ea f6 fb ff ff ff ff 
	00 00 f8 00 00 ff 00 00 
	00 f4 00 ff ff 00 ff 00 
	ef 00 fc 00 00 ff 00 ff 

[MCU #19] Downsampling:
[Y]:
	00 00 00 f2 f8 00 00 00 
	00 00 eb f3 f9 fe 00 00 
	00 e1 ed f6 fb fe ff 00 
	da e8 00 f9 fd 00 ff ff 
	e0 ea f6 fb ff ff ff ff 
	00 00 f8 00 00 ff 00 00 
	00 f4 00 ff ff 00 ff 00 
	ef 00 fc 00 00 ff 00 ff 

[MCU #19] DCT:
[Y]:
	0057 ffde fede 0002 ffff 0000 ffee 0001 
	fff0 fffe fee9 0009 0069 0000 ff7f 0001 
	fec3 0016 ff9c 0005 0042 fffb 0096 fffc 
	ff40 000b ffa5 ffff 0014 fffc 0001 fffe 
	0078 fff3 010c ffee 00f0 fff8 0014 0002 
	ffa8 0000 000f fffb 007c 0006 fe29 0007 
	ff79 0004 001e 0004 ff5d 0003 00f5 0000 
	00d7 fffb ffa8 0005 ffc0 0007 ff42 0003 

[MCU #19] ZZ:
[Y]:
	0057 ffde fff0 fec3 fffe fede 0002 fee9 
	0016 ff40 0078 000b ff9c 0009 ffff 0000 
	0069 0005 ffa5 fff3 ffa8 ff79 0000 010c 
	ffff 0042 0000 ffee 0001 ff7f fffb 0014 
	ffee 000f 0004 00d7 fffb 001e fffb 00f0 
	fffc 0096 0001 fffc 0001 fff8 007c 0004 
	ffa8 0005 ff5d 0006 0014 fffe 0002 fe29 
	0003 ffc0 0007 00f5 0007 0000 ff42 0003 

[MCU #19] Quantification:
[Y]:
	0011 fff5 fffb ffc1 0000 ffe8 0000 fff1 
	0005 ffd0 001e 0001 fff4 0000 0000 0000 
	001a 0001 ffee ffff fff9 fff9 0000 000f 
	0000 000d 0000 fffe 0000 fffc 0000 0001 
	fffd 0002 0000 000c 0000 0000 0000 000a 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff1 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #19] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 62, magnitude = 6, index = 62
		bitstream => writing 14 over 4 bits
		bitstream => writing 62 over 6 bits

AC:
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -63, magnitude = 6, index = 0
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 0 over 6 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 7 over 5 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -48, magnitude = 6, index = 15
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 15 over 6 bits
	value = 30, magnitude = 5, index = 30
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 30 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 13 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 10 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 0 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #20] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #20] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #20] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #20] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #20] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #20] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #20] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 7, magnitude = 3, index = 7
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #21] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #21] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #21] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #21] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #21] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #21] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #21] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #22] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff fe 00 00    
00 ff ff ff ff fe fc 00    
ff ff 00 ff ff 00 fc f9    
ff ff ff ff ff fe fc f9    
00 00 ff 00 00 fe 00 00    
00 ff 00 ff ff 00 fd 00    
ff 00 ff 00 00 ff 00 fd    

[MCU #22] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff fe 00 00 
	00 ff ff ff ff fe fc 00 
	ff ff 00 ff ff 00 fc f9 
	ff ff ff ff ff fe fc f9 
	00 00 ff 00 00 fe 00 00 
	00 ff 00 ff ff 00 fd 00 
	ff 00 ff 00 00 ff 00 fd 

[MCU #22] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff fe 00 00 
	00 ff ff ff ff fe fc 00 
	ff ff 00 ff ff 00 fc f9 
	ff ff ff ff ff fe fc f9 
	00 00 ff 00 00 fe 00 00 
	00 ff 00 ff ff 00 fd 00 
	ff 00 ff 00 00 ff 00 fd 

[MCU #22] DCT:
[Y]:
	0077 0004 fee0 0001 0000 ffff ffec 0000 
	fffa ffff fedb ffff 006a ffff ff7d 0000 
	feb5 fffc ff8e fffe 0045 0000 0099 0000 
	ff37 ffff ffa1 ffff 0018 0000 0003 0000 
	007d 0002 0119 0002 00fd 0001 0013 0000 
	ffa6 0000 0012 0000 007d ffff fe20 ffff 
	ff76 fffe 001b ffff ff5a ffff 00f4 0000 
	00dc 0000 ffa8 ffff ffba ffff ff3c ffff 

[MCU #22] ZZ:
[Y]:
	0077 0004 fffa feb5 ffff fee0 0001 fedb 
	fffc ff37 007d ffff ff8e ffff 0000 ffff 
	006a fffe ffa1 0002 ffa6 ff76 0000 0119 
	ffff 0045 ffff ffec 0000 ff7d 0000 0018 
	0002 0012 fffe 00dc 0000 001b 0000 00fd 
	0000 0099 0000 0000 0003 0001 007d ffff 
	ffa8 ffff ff5a ffff 0013 0000 0000 fe20 
	ffff ffba ffff 00f4 ffff 0000 ff3c ffff 

[MCU #22] Quantification:
[Y]:
	0017 0001 fffe ffbe 0000 ffe8 0000 fff0 
	ffff ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #22] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -1, magnitude = 1, index = 0
		bitstream => writing 2 over 3 bits
		bitstream => writing 0 over 1 bits

AC:
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 7 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #23] Valeurs "niveaux de gris" initiales:
00 00 00 df d6 00 00 00    
00 00 e4 da ce c4 00 00    
00 ec e2 d8 cc c1 b8 00    
f3 ec 00 d7 ce 00 ba b3    
f4 ec e5 db d2 c9 c1 ba    
00 00 e8 00 00 cf 00 00    
00 f4 00 e7 e1 00 d5 00    
fa 00 f3 00 00 e4 00 df    

[MCU #23] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 df d6 00 00 00 
	00 00 e4 da ce c4 00 00 
	00 ec e2 d8 cc c1 b8 00 
	f3 ec 00 d7 ce 00 ba b3 
	f4 ec e5 db d2 c9 c1 ba 
	00 00 e8 00 00 cf 00 00 
	00 f4 00 e7 e1 00 d5 00 
	fa 00 f3 00 00 e4 00 df 

[MCU #23] Downsampling:
[Y]:
	00 00 00 df d6 00 00 00 
	00 00 e4 da ce c4 00 00 
	00 ec e2 d8 cc c1 b8 00 
	f3 ec 00 d7 ce 00 ba b3 
	f4 ec e5 db d2 c9 c1 ba 
	00 00 e8 00 00 cf 00 00 
	00 f4 00 e7 e1 00 d5 00 
	fa 00 f3 00 00 e4 00 df 

[MCU #23] DCT:
[Y]:
	ffd1 0042 ff13 fff3 0000 fffd fff4 fffd 
	ffdf fffd ff07 fff5 005c 0000 ff89 fffb 
	fefe ffd3 ffa1 fff8 003c 0008 0086 0005 
	ff56 ffed ffa5 0000 0013 0006 fff6 0004 
	0071 0016 00f2 001e 00d6 000a 0020 fffd 
	ffb3 fffe 0006 000a 0069 fff0 fe5b ffec 
	ff89 fff5 001a fff5 ff75 fffe 00dd 0006 
	00bc 000a ffb5 fff6 ffc8 fff3 ff51 fff8 

[MCU #23] ZZ:
[Y]:
	ffd1 0042 ffdf fefe fffd ff13 fff3 ff07 
	ffd3 ff56 0071 ffed ffa1 fff5 0000 fffd 
	005c fff8 ffa5 0016 ffb3 ff89 fffe 00f2 
	0000 003c 0000 fff4 fffd ff89 0008 0013 
	001e 0006 fff5 00bc 000a 001a 000a 00d6 
	0006 0086 fffb 0005 fff6 000a 0069 fff5 
	ffb5 fff6 ff75 fff0 0020 0004 fffd fe5b 
	fffe ffc8 fff3 00dd ffec 0006 ff51 fff8 

[MCU #23] Quantification:
[Y]:
	fff7 0016 fff5 ffcd 0000 ffed 0000 fff3 
	fff5 ffd6 001c fffd fff5 0000 0000 0000 
	0017 fffe ffee 0003 fffa fff9 0000 000e 
	0000 000c 0000 ffff 0000 fffc 0000 0001 
	0006 0000 ffff 000b 0000 0000 0000 0009 
	0000 000c 0000 0000 0000 0000 0003 0000 
	fffb 0000 fffa 0000 0001 0000 0000 fff2 
	0000 fffe 0000 0007 0000 0000 fffb 0000 

[MCU #23] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -32, magnitude = 6, index = 31
		bitstream => writing 14 over 4 bits
		bitstream => writing 31 over 6 bits

AC:
	value = 22, magnitude = 5, index = 22
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 22 over 5 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -51, magnitude = 6, index = 12
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 12 over 6 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 2 over 4 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -42, magnitude = 6, index = 21
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 21 over 6 bits
	value = 28, magnitude = 5, index = 28
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 28 over 5 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 23 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 13 over 5 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 14 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 9 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 1 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #24] Valeurs "niveaux de gris" initiales:
00 00 00 ab a9 00 00 00    
00 00 a6 a4 a4 a4 00 00    
00 a7 a3 a4 a6 a8 a7 00    
b0 ac 00 ab ac 00 b0 af    
b6 b2 b6 b4 b8 b9 bb be    
00 00 c1 00 00 c9 00 00    
00 d0 00 d3 d5 00 dd 00    
df 00 e0 00 00 e7 00 ec    

[MCU #24] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ab a9 00 00 00 
	00 00 a6 a4 a4 a4 00 00 
	00 a7 a3 a4 a6 a8 a7 00 
	b0 ac 00 ab ac 00 b0 af 
	b6 b2 b6 b4 b8 b9 bb be 
	00 00 c1 00 00 c9 00 00 
	00 d0 00 d3 d5 00 dd 00 
	df 00 e0 00 00 e7 00 ec 

[MCU #24] Downsampling:
[Y]:
	00 00 00 ab a9 00 00 00 
	00 00 a6 a4 a4 a4 00 00 
	00 a7 a3 a4 a6 a8 a7 00 
	b0 ac 00 ab ac 00 b0 af 
	b6 b2 b6 b4 b8 b9 bb be 
	00 00 c1 00 00 c9 00 00 
	00 d0 00 d3 d5 00 dd 00 
	df 00 e0 00 00 e7 00 ec 

[MCU #24] DCT:
[Y]:
	ff41 fff6 ff4a 0002 fffa 0000 0001 0000 
	ffac 0007 ff3d ffff 004c 0000 ff93 0000 
	ff3b 0000 ffbb fffd 002f ffff 0079 fffd 
	ff74 0000 ffa7 0001 0005 0002 ffea 0000 
	006c fffc 00d3 fffc 00b2 fffe 0034 ffff 
	ffbf 0002 fff7 0002 0054 0004 fe8a 0002 
	ff97 0001 001a 0002 ff89 fffb 00d8 fff9 
	00a1 fffb ffbf 0000 ffd8 0001 ff5e 0002 

[MCU #24] ZZ:
[Y]:
	ff41 fff6 ffac ff3b 0007 ff4a 0002 ff3d 
	0000 ff74 006c 0000 ffbb ffff fffa 0000 
	004c fffd ffa7 fffc ffbf ff97 0002 00d3 
	0001 002f 0000 0001 0000 ff93 ffff 0005 
	fffc fff7 0001 00a1 fffb 001a 0002 00b2 
	0002 0079 0000 fffd ffea fffe 0054 0002 
	ffbf 0000 ff89 0004 0034 0000 ffff fe8a 
	fffb ffd8 0001 00d8 0002 fff9 ff5e 0002 

[MCU #24] Quantification:
[Y]:
	ffda fffd ffe4 ffd9 0001 fff1 0000 fff6 
	0000 ffdd 001b 0000 fff8 0000 0000 0000 
	0013 0000 ffef 0000 fffb fffa 0000 000c 
	0000 0009 0000 0000 0000 fffc 0000 0000 
	0000 ffff 0000 0009 0000 0000 0000 0007 
	0000 000b 0000 0000 0000 0000 0002 0000 
	fffc 0000 fffb 0000 0001 0000 0000 fff4 
	0000 ffff 0000 0007 0000 0000 fffb 0000 

[MCU #24] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -29, magnitude = 5, index = 2
		bitstream => writing 6 over 3 bits
		bitstream => writing 2 over 5 bits

AC:
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -28, magnitude = 5, index = 3
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 3 over 5 bits
	value = -39, magnitude = 6, index = 24
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 24 over 6 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 5 over 4 bits
	value = -35, magnitude = 6, index = 28
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 28 over 6 bits
	value = 27, magnitude = 5, index = 27
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 27 over 5 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 7 over 4 bits
	value = 19, magnitude = 5, index = 19
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 19 over 5 bits
	value = -17, magnitude = 5, index = 14
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 14 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 3 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #25] Valeurs "niveaux de gris" initiales:
00 00 00 a0 9f 00 00 00    
00 00 a1 9c 9b 98 00 00    
00 a7 a4 9e 9a 95 93 00    
b2 ad 00 a5 9f 00 95 93    
be bb bb b3 ab a3 9e 9a    
00 00 c9 00 00 b3 00 00    
00 db 00 d3 cc 00 ba 00    
eb 00 e6 00 00 d2 00 c4    

[MCU #25] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 a0 9f 00 00 00 
	00 00 a1 9c 9b 98 00 00 
	00 a7 a4 9e 9a 95 93 00 
	b2 ad 00 a5 9f 00 95 93 
	be bb bb b3 ab a3 9e 9a 
	00 00 c9 00 00 b3 00 00 
	00 db 00 d3 cc 00 ba 00 
	eb 00 e6 00 00 d2 00 c4 

[MCU #25] Downsampling:
[Y]:
	00 00 00 a0 9f 00 00 00 
	00 00 a1 9c 9b 98 00 00 
	00 a7 a4 9e 9a 95 93 00 
	b2 ad 00 a5 9f 00 95 93 
	be bb bb b3 ab a3 9e 9a 
	00 00 c9 00 00 b3 00 00 
	00 db 00 d3 cc 00 ba 00 
	eb 00 e6 00 00 d2 00 c4 

[MCU #25] DCT:
[Y]:
	ff15 002b ff4c fff9 fff9 ffff 0004 0001 
	ffac ffef ff4c fffe 0048 fffd ff98 fffc 
	ff49 ffee ffc2 0001 002d 0004 0073 0004 
	ff7d fff6 ffac fffa 0005 fffe ffea 0000 
	0062 0012 00c6 000f 00a5 000a 0032 0002 
	ffc1 fffa fff7 0002 0054 fff3 fe9e fff0 
	ff9c fff9 001d fffa ff8c 0005 00d0 000b 
	009a 0009 ffc1 fffa ffdd fff8 ff64 fffa 

[MCU #25] ZZ:
[Y]:
	ff15 002b ffac ff49 ffef ff4c fff9 ff4c 
	ffee ff7d 0062 fff6 ffc2 fffe fff9 ffff 
	0048 0001 ffac 0012 ffc1 ff9c fffa 00c6 
	fffa 002d fffd 0004 0001 ff98 0004 0005 
	000f fff7 fff9 009a 0009 001d 0002 00a5 
	fffe 0073 fffc 0004 ffea 000a 0054 fffa 
	ffc1 fffa ff8c fff3 0032 0000 0002 fe9e 
	0005 ffdd fff8 00d0 fff0 000b ff64 fffa 

[MCU #25] Quantification:
[Y]:
	ffd1 000e ffe4 ffdc fffe fff1 0000 fff6 
	fffc ffe0 0018 ffff fff9 0000 0000 0000 
	0012 0000 fff0 0002 fffb fffb 0000 000b 
	ffff 0009 0000 0000 0000 fffc 0000 0000 
	0003 ffff 0000 0009 0000 0000 0000 0007 
	0000 000a 0000 0000 0000 0000 0002 0000 
	fffc 0000 fffb 0000 0001 0000 0000 fff5 
	0000 ffff 0000 0007 0000 0000 fffb 0000 

[MCU #25] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -9, magnitude = 4, index = 6
		bitstream => writing 5 over 3 bits
		bitstream => writing 6 over 4 bits

AC:
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = -28, magnitude = 5, index = 3
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 3 over 5 bits
	value = -36, magnitude = 6, index = 27
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 27 over 6 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 5 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -32, magnitude = 6, index = 31
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 31 over 6 bits
	value = 24, magnitude = 5, index = 24
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 24 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 18 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 4 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #26] Valeurs "niveaux de gris" initiales:
00 00 00 ad b0 00 00 00    
00 00 9a 9f a2 a6 00 00    
00 91 92 95 99 9d 9f 00    
8f 90 00 91 95 00 9c 9d    
94 93 93 96 98 9b 9c 9d    
00 00 9d 00 00 a3 00 00    
00 ab 00 ab ae 00 b0 00    
be 00 bc 00 00 bd 00 bd    

[MCU #26] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ad b0 00 00 00 
	00 00 9a 9f a2 a6 00 00 
	00 91 92 95 99 9d 9f 00 
	8f 90 00 91 95 00 9c 9d 
	94 93 93 96 98 9b 9c 9d 
	00 00 9d 00 00 a3 00 00 
	00 ab 00 ab ae 00 b0 00 
	be 00 bc 00 00 bd 00 bd 

[MCU #26] Downsampling:
[Y]:
	00 00 00 ad b0 00 00 00 
	00 00 9a 9f a2 a6 00 00 
	00 91 92 95 99 9d 9f 00 
	8f 90 00 91 95 00 9c 9d 
	94 93 93 96 98 9b 9c 9d 
	00 00 9d 00 00 a3 00 00 
	00 ab 00 ab ae 00 b0 00 
	be 00 bc 00 00 bd 00 bd 

[MCU #26] DCT:
[Y]:
	fed1 fff1 ff4f 0006 0002 0000 fffd 0000 
	ffe0 fffd ff3e 0003 0048 ffff ffa1 ffff 
	ff63 000b ffb5 0001 0033 fffe 0066 ffff 
	ff7f 0004 ffb3 fffe 0013 fffd ffea fffe 
	0051 fffd 00b3 fff9 009f ffff 0020 0002 
	ffc6 ffff 0000 fffb 004d 0001 fec2 0005 
	ffab 0002 0018 0002 ff9d 0001 00a6 ffff 
	0084 fffe ffc9 0003 ffdb 0002 ff78 0001 

[MCU #26] ZZ:
[Y]:
	fed1 fff1 ffe0 ff63 fffd ff4f 0006 ff3e 
	000b ff7f 0051 0004 ffb5 0003 0002 0000 
	0048 0001 ffb3 fffd ffc6 ffab ffff 00b3 
	fffe 0033 ffff fffd 0000 ffa1 fffe 0013 
	fff9 0000 0002 0084 fffe 0018 fffb 009f 
	fffd 0066 ffff ffff ffea ffff 004d 0002 
	ffc9 0003 ff9d 0001 0020 fffe 0002 fec2 
	0001 ffdb 0002 00a6 0005 ffff ff78 0001 

[MCU #26] Quantification:
[Y]:
	ffc4 fffb fff6 ffe1 0000 fff2 0000 fff6 
	0002 ffe0 0014 0000 fff7 0000 0000 0000 
	0012 0000 fff1 0000 fffc fffb 0000 000a 
	0000 000a 0000 0000 0000 fffd 0000 0001 
	ffff 0000 0000 0007 0000 0000 0000 0006 
	0000 0009 0000 0000 0000 0000 0002 0000 
	fffd 0000 fffc 0000 0001 0000 0000 fff6 
	0000 ffff 0000 0005 0000 0000 fffc 0000 

[MCU #26] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -13, magnitude = 4, index = 2
		bitstream => writing 5 over 3 bits
		bitstream => writing 2 over 4 bits

AC:
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -31, magnitude = 5, index = 0
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -32, magnitude = 6, index = 31
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 31 over 6 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 6 over 4 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 18 over 5 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 7 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 6 over 3 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 5 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 5 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #27] Valeurs "niveaux de gris" initiales:
00 00 00 d0 d3 00 00 00    
00 00 b9 c0 c3 c7 00 00    
00 aa ae b1 b5 b7 b7 00    
a1 a3 00 a8 a9 00 ab ac    
a0 a0 9f a2 a1 a4 a3 a3    
00 00 a2 00 00 a2 00 00    
00 ad 00 a9 a5 00 a6 00    
bb 00 b5 00 00 ae 00 ae    

[MCU #27] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 d0 d3 00 00 00 
	00 00 b9 c0 c3 c7 00 00 
	00 aa ae b1 b5 b7 b7 00 
	a1 a3 00 a8 a9 00 ab ac 
	a0 a0 9f a2 a1 a4 a3 a3 
	00 00 a2 00 00 a2 00 00 
	00 ad 00 a9 a5 00 a6 00 
	bb 00 b5 00 00 ae 00 ae 

[MCU #27] Downsampling:
[Y]:
	00 00 00 d0 d3 00 00 00 
	00 00 b9 c0 c3 c7 00 00 
	00 aa ae b1 b5 b7 b7 00 
	a1 a3 00 a8 a9 00 ab ac 
	a0 a0 9f a2 a1 a4 a3 a3 
	00 00 a2 00 00 a2 00 00 
	00 ad 00 a9 a5 00 a6 00 
	bb 00 b5 00 00 ae 00 ae 

[MCU #27] DCT:
[Y]:
	ff0f fffb ff2b 0004 000a 0001 fff3 ffff 
	001a fff5 ff16 0004 0051 fffe ffa1 ffff 
	ff45 000b ffa1 0002 003c ffff 0068 0000 
	ff6c 0002 ffb8 fffc 0020 fffb fff3 fffd 
	004a 0001 00bd fffb 00b3 0001 000b 0004 
	ffc1 fffe 000e fff9 0057 ffff feb4 0001 
	ffa9 0000 0016 0001 ff98 0004 0097 0005 
	008b 0000 ffc7 0002 ffcf 0001 ff79 fffe 

[MCU #27] ZZ:
[Y]:
	ff0f fffb 001a ff45 fff5 ff2b 0004 ff16 
	000b ff6c 004a 0002 ffa1 0004 000a 0001 
	0051 0002 ffb8 0001 ffc1 ffa9 fffe 00bd 
	fffc 003c fffe fff3 ffff ffa1 ffff 0020 
	fffb 000e 0000 008b 0000 0016 fff9 00b3 
	fffb 0068 ffff 0000 fff3 0001 0057 0001 
	ffc7 0002 ff98 ffff 000b fffd 0004 feb4 
	0004 ffcf 0001 0097 0001 0005 ff79 fffe 

[MCU #27] Quantification:
[Y]:
	ffd0 ffff 0008 ffdb ffff ffef 0000 fff3 
	0002 ffdb 0012 0000 fff5 0000 0000 0000 
	0014 0000 fff2 0000 fffb fffb 0000 000b 
	ffff 000c 0000 ffff 0000 fffd 0000 0001 
	ffff 0002 0000 0008 0000 0000 0000 0007 
	0000 0009 0000 0000 0000 0000 0002 0000 
	fffd 0000 fffc 0000 0000 0000 0000 fff5 
	0000 ffff 0000 0005 0000 0000 fffc 0000 

[MCU #27] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 12, magnitude = 4, index = 12
		bitstream => writing 5 over 3 bits
		bitstream => writing 12 over 4 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -37, magnitude = 6, index = 26
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 26 over 6 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -17, magnitude = 5, index = 14
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 14 over 5 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 2 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -37, magnitude = 6, index = 26
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 26 over 6 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 18 over 5 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 20 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 12 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 4 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 5 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #28] Valeurs "niveaux de gris" initiales:
00 00 00 c5 be 00 00 00    
00 00 bb b6 b3 ae 00 00    
00 b3 b0 ab a8 a6 a5 00    
ac aa 00 a5 a3 00 a6 a6    
a5 a5 a4 a2 a5 a6 a8 ac    
00 00 a4 00 00 ad 00 00    
00 a9 00 af b4 00 be 00    
b3 00 b8 00 00 c5 00 d3    

[MCU #28] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 c5 be 00 00 00 
	00 00 bb b6 b3 ae 00 00 
	00 b3 b0 ab a8 a6 a5 00 
	ac aa 00 a5 a3 00 a6 a6 
	a5 a5 a4 a2 a5 a6 a8 ac 
	00 00 a4 00 00 ad 00 00 
	00 a9 00 af b4 00 be 00 
	b3 00 b8 00 00 c5 00 d3 

[MCU #28] Downsampling:
[Y]:
	00 00 00 c5 be 00 00 00 
	00 00 bb b6 b3 ae 00 00 
	00 b3 b0 ab a8 a6 a5 00 
	ac aa 00 a5 a3 00 a6 a6 
	a5 a5 a4 a2 a5 a6 a8 ac 
	00 00 a4 00 00 ad 00 00 
	00 a9 00 af b4 00 be 00 
	b3 00 b8 00 00 c5 00 d3 

[MCU #28] DCT:
[Y]:
	ff11 fff9 ff3d fffa 0004 fffe fff8 fffe 
	fff7 0013 ff26 fffb 004c 0003 ff9e 0001 
	ff45 fff5 ffa7 fffb 0038 0000 006c fffe 
	ff6f fffe ffb2 0008 0018 0007 fff0 0001 
	0056 fff8 00c4 ffff 00b0 fffb 0018 fff9 
	ffc0 0004 0007 0006 0054 0007 fead 0002 
	ffa4 0002 0017 fffe ff95 fff7 00a7 fff5 
	008f fffe ffc5 fffd ffd2 0000 ff73 0003 

[MCU #28] ZZ:
[Y]:
	ff11 fff9 fff7 ff45 0013 ff3d fffa ff26 
	fff5 ff6f 0056 fffe ffa7 fffb 0004 fffe 
	004c fffb ffb2 fff8 ffc0 ffa4 0004 00c4 
	0008 0038 0003 fff8 fffe ff9e 0000 0018 
	ffff 0007 0002 008f fffe 0017 0006 00b0 
	0007 006c 0001 fffe fff0 fffb 0054 fffe 
	ffc5 fffd ff95 0007 0018 0001 fff9 fead 
	fff7 ffd2 0000 00a7 0002 fff5 ff73 0003 

[MCU #28] Quantification:
[Y]:
	ffd1 fffe fffd ffdb 0002 fff0 0000 fff4 
	fffe ffdc 0015 0000 fff5 0000 0000 0000 
	0013 ffff fff1 ffff fffb fffb 0000 000b 
	0002 000b 0000 0000 0000 fffd 0000 0001 
	0000 0001 0000 0008 0000 0000 0000 0007 
	0001 0009 0000 0000 0000 0000 0002 0000 
	fffd 0000 fffc 0000 0000 0000 0000 fff5 
	0000 ffff 0000 0005 0000 0000 fffc 0000 

[MCU #28] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 1, magnitude = 1, index = 1
		bitstream => writing 2 over 3 bits
		bitstream => writing 1 over 1 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -37, magnitude = 6, index = 26
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 26 over 6 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -36, magnitude = 6, index = 27
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 27 over 6 bits
	value = 21, magnitude = 5, index = 21
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 21 over 5 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = 19, magnitude = 5, index = 19
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 19 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 4 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 5 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #29] Valeurs "niveaux de gris" initiales:
00 00 00 a7 a7 00 00 00    
00 00 a5 a6 a6 a7 00 00    
00 a6 a9 a8 ab af af 00    
a7 ab 00 b1 b5 00 bc bf    
b0 b3 b9 be c3 c8 ca d0    
00 00 c7 00 00 d8 00 00    
00 cf 00 dd e0 00 e8 00    
db 00 e5 00 00 f1 00 f6    

[MCU #29] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 a7 a7 00 00 00 
	00 00 a5 a6 a6 a7 00 00 
	00 a6 a9 a8 ab af af 00 
	a7 ab 00 b1 b5 00 bc bf 
	b0 b3 b9 be c3 c8 ca d0 
	00 00 c7 00 00 d8 00 00 
	00 cf 00 dd e0 00 e8 00 
	db 00 e5 00 00 f1 00 f6 

[MCU #29] Downsampling:
[Y]:
	00 00 00 a7 a7 00 00 00 
	00 00 a5 a6 a6 a7 00 00 
	00 a6 a9 a8 ab af af 00 
	a7 ab 00 b1 b5 00 bc bf 
	b0 b3 b9 be c3 c8 ca d0 
	00 00 c7 00 00 d8 00 00 
	00 cf 00 dd e0 00 e8 00 
	db 00 e5 00 00 f1 00 f6 

[MCU #29] DCT:
[Y]:
	ff5a ffe1 ff42 0000 fff7 0000 0002 ffff 
	ffa3 000d ff40 0000 004c 0000 ff90 0002 
	ff2c 000e ffbf 0000 002e fffe 007d fffd 
	ff72 0003 ffa8 0005 0003 0002 ffed fffe 
	006f fff0 00d8 fff4 00b4 fff8 0034 fffe 
	ffbc 0004 fff6 0000 0058 0008 fe81 0009 
	ff93 0006 001c 0004 ff80 fffa 00e4 fff7 
	00aa fff9 ffbc 0002 ffd9 0005 ff5b 0004 

[MCU #29] ZZ:
[Y]:
	ff5a ffe1 ffa3 ff2c 000d ff42 0000 ff40 
	000e ff72 006f 0003 ffbf 0000 fff7 0000 
	004c 0000 ffa8 fff0 ffbc ff93 0004 00d8 
	0005 002e 0000 0002 ffff ff90 fffe 0003 
	fff4 fff6 0006 00aa fff9 001c 0000 00b4 
	0002 007d 0002 fffd ffed fff8 0058 0004 
	ffbc 0002 ff80 0008 0034 fffe fffe fe81 
	fffa ffd9 0005 00e4 0009 fff7 ff5b 0004 

[MCU #29] Quantification:
[Y]:
	ffdf fff6 ffe1 ffd6 0001 fff1 0000 fff6 
	0003 ffdd 001b 0000 fff8 0000 0000 0000 
	0013 0000 ffef fffe fffb fffa 0000 000c 
	0001 0009 0000 0000 0000 fffc 0000 0000 
	fffe ffff 0000 000a 0000 0000 0000 0007 
	0000 000b 0000 0000 0000 0000 0002 0000 
	fffc 0000 fffb 0000 0001 0000 0000 fff4 
	0000 ffff 0000 0007 0000 0000 fffb 0000 

[MCU #29] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 14, magnitude = 4, index = 14
		bitstream => writing 5 over 3 bits
		bitstream => writing 14 over 4 bits

AC:
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -31, magnitude = 5, index = 0
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 5 bits
	value = -42, magnitude = 6, index = 21
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 21 over 6 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 5 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -35, magnitude = 6, index = 28
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 28 over 6 bits
	value = 27, magnitude = 5, index = 27
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 27 over 5 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 7 over 4 bits
	value = 19, magnitude = 5, index = 19
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 19 over 5 bits
	value = -17, magnitude = 5, index = 14
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 14 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 7 over 3 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 3 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #30] Valeurs "niveaux de gris" initiales:
00 00 00 a6 a6 00 00 00    
00 00 ab ac ad ae 00 00    
00 b4 b8 b6 ba b8 bb 00    
c2 c5 00 c8 c9 00 ca cb    
d1 d6 d6 da d8 da d9 db    
00 00 e4 00 00 e7 00 00    
00 ef 00 f2 f3 00 f3 00    
f8 00 fa 00 00 fc 00 fc    

[MCU #30] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 a6 a6 00 00 00 
	00 00 ab ac ad ae 00 00 
	00 b4 b8 b6 ba b8 bb 00 
	c2 c5 00 c8 c9 00 ca cb 
	d1 d6 d6 da d8 da d9 db 
	00 00 e4 00 00 e7 00 00 
	00 ef 00 f2 f3 00 f3 00 
	f8 00 fa 00 00 fc 00 fc 

[MCU #30] Downsampling:
[Y]:
	00 00 00 a6 a6 00 00 00 
	00 00 ab ac ad ae 00 00 
	00 b4 b8 b6 ba b8 bb 00 
	c2 c5 00 c8 c9 00 ca cb 
	d1 d6 d6 da d8 da d9 db 
	00 00 e4 00 00 e7 00 00 
	00 ef 00 f2 f3 00 f3 00 
	f8 00 fa 00 00 fc 00 fc 

[MCU #30] DCT:
[Y]:
	ffa6 fff7 ff39 ffff fff4 ffff ffff 0000 
	ff90 0001 ff3c 0000 0050 0000 ff89 0001 
	ff03 0005 ffc3 0002 002d ffff 008a ffff 
	ff6b 0002 ffa4 0000 fffa ffff fff3 fffd 
	0081 fffc 00ec fffb 00c1 fffe 0038 fffd 
	ffb6 0000 fff6 ffff 005f 0001 fe62 0003 
	ff85 0001 001c 0001 ff74 0000 00fe 0001 
	00be fffe ffb5 0000 ffd4 0001 ff4d 0001 

[MCU #30] ZZ:
[Y]:
	ffa6 fff7 ff90 ff03 0001 ff39 ffff ff3c 
	0005 ff6b 0081 0002 ffc3 0000 fff4 ffff 
	0050 0002 ffa4 fffc ffb6 ff85 0000 00ec 
	0000 002d 0000 ffff 0000 ff89 ffff fffa 
	fffb fff6 0001 00be fffe 001c ffff 00c1 
	ffff 008a 0001 ffff fff3 fffe 005f 0001 
	ffb5 0000 ff74 0001 0038 fffd fffd fe62 
	0000 ffd4 0001 00fe 0003 0001 ff4d 0001 

[MCU #30] Quantification:
[Y]:
	ffee fffd ffdb ffce 0000 fff0 0000 fff6 
	0001 ffdb 0020 0000 fff9 0000 0000 0000 
	0014 0000 ffee 0000 fffa fff9 0000 000d 
	0000 0009 0000 0000 0000 fffc 0000 0000 
	ffff ffff 0000 000b 0000 0000 0000 0008 
	0000 000c 0000 0000 0000 0000 0002 0000 
	fffb 0000 fffa 0000 0001 0000 0000 fff3 
	0000 ffff 0000 0008 0000 0000 fffb 0000 

[MCU #30] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 15, magnitude = 4, index = 15
		bitstream => writing 5 over 3 bits
		bitstream => writing 15 over 4 bits

AC:
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -37, magnitude = 6, index = 26
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 26 over 6 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 13 over 6 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 5 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -37, magnitude = 6, index = 26
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 26 over 6 bits
	value = 32, magnitude = 6, index = 32
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 32 over 6 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 20 over 5 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 13 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 8 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 2 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #31] Valeurs "niveaux de gris" initiales:
00 00 00 a5 a5 00 00 00    
00 00 ad ab ab a9 00 00    
00 b8 b9 b6 b5 b3 b1 00    
c8 c9 00 c6 c3 00 c1 be    
d8 da d7 d7 d5 d3 d1 d1    
00 00 e4 00 00 e2 00 00    
00 f2 00 f1 f0 00 ec 00    
fb 00 fb 00 00 f9 00 f6    

[MCU #31] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 a5 a5 00 00 00 
	00 00 ad ab ab a9 00 00 
	00 b8 b9 b6 b5 b3 b1 00 
	c8 c9 00 c6 c3 00 c1 be 
	d8 da d7 d7 d5 d3 d1 d1 
	00 00 e4 00 00 e2 00 00 
	00 f2 00 f1 f0 00 ec 00 
	fb 00 fb 00 00 f9 00 f6 

[MCU #31] Downsampling:
[Y]:
	00 00 00 a5 a5 00 00 00 
	00 00 ad ab ab a9 00 00 
	00 b8 b9 b6 b5 b3 b1 00 
	c8 c9 00 c6 c3 00 c1 be 
	d8 da d7 d7 d5 d3 d1 d1 
	00 00 e4 00 00 e2 00 00 
	00 f2 00 f1 f0 00 ec 00 
	fb 00 fb 00 00 f9 00 f6 

[MCU #31] DCT:
[Y]:
	ff9c 000a ff3b fffe fff3 fffe 0000 ffff 
	ff90 ffff ff3d fffe 004f ffff ff8a 0000 
	ff08 fff9 ffc2 0000 002d 0001 0089 0002 
	ff6d fffc ffa5 0000 fffa 0000 fff1 ffff 
	0080 0003 00ea 0003 00bf 0001 0037 ffff 
	ffb6 0000 fff5 0001 005d fffe fe66 fffd 
	ff86 fffe 001c fffe ff76 0000 00fc 0001 
	00bc 0001 ffb7 fffd ffd5 fffd ff4f ffff 

[MCU #31] ZZ:
[Y]:
	ff9c 000a ff90 ff08 ffff ff3b fffe ff3d 
	fff9 ff6d 0080 fffc ffc2 fffe fff3 fffe 
	004f 0000 ffa5 0003 ffb6 ff86 0000 00ea 
	0000 002d ffff 0000 ffff ff8a 0001 fffa 
	0003 fff5 fffe 00bc 0001 001c 0001 00bf 
	0000 0089 0000 0002 fff1 0001 005d fffe 
	ffb7 fffd ff76 fffe 0037 ffff ffff fe66 
	0000 ffd5 fffd 00fc fffd 0001 ff4f ffff 

[MCU #31] Quantification:
[Y]:
	ffec 0003 ffdb ffcf 0000 fff0 0000 fff6 
	ffff ffdc 0020 0000 fff9 0000 0000 0000 
	0013 0000 ffee 0000 fffa fff9 0000 000d 
	0000 0009 0000 0000 0000 fffc 0000 0000 
	0000 ffff 0000 000b 0000 0000 0000 0008 
	0000 000c 0000 0000 0000 0000 0002 0000 
	fffc 0000 fffa 0000 0001 0000 0000 fff3 
	0000 ffff 0000 0008 0000 0000 fffb 0000 

[MCU #31] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -2, magnitude = 2, index = 1
		bitstream => writing 3 over 3 bits
		bitstream => writing 1 over 2 bits

AC:
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -37, magnitude = 6, index = 26
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 26 over 6 bits
	value = -49, magnitude = 6, index = 14
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 14 over 6 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 5 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -36, magnitude = 6, index = 27
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 27 over 6 bits
	value = 32, magnitude = 6, index = 32
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 32 over 6 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = 19, magnitude = 5, index = 19
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 19 over 5 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 13 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 11 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 8 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 2 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #32] Valeurs "niveaux de gris" initiales:
00 00 00 a9 af 00 00 00    
00 00 a9 a9 af b4 00 00    
00 af af b1 b4 b9 c2 00    
bc bb 00 bd bf 00 c8 d2    
cd cc c9 cb cc cf d4 d9    
00 00 db 00 00 dc 00 00    
00 e8 00 e8 e7 00 ea 00    
f4 00 f1 00 00 f2 00 f4    

[MCU #32] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 a9 af 00 00 00 
	00 00 a9 a9 af b4 00 00 
	00 af af b1 b4 b9 c2 00 
	bc bb 00 bd bf 00 c8 d2 
	cd cc c9 cb cc cf d4 d9 
	00 00 db 00 00 dc 00 00 
	00 e8 00 e8 e7 00 ea 00 
	f4 00 f1 00 00 f2 00 f4 

[MCU #32] Downsampling:
[Y]:
	00 00 00 a9 af 00 00 00 
	00 00 a9 a9 af b4 00 00 
	00 af af b1 b4 b9 c2 00 
	bc bb 00 bd bf 00 c8 d2 
	cd cc c9 cb cc cf d4 d9 
	00 00 db 00 00 dc 00 00 
	00 e8 00 e8 e7 00 ea 00 
	f4 00 f1 00 00 f2 00 f4 

[MCU #32] DCT:
[Y]:
	ff8e fff0 ff43 0003 fff6 0000 fffe 0001 
	ff9f fffb ff38 0004 004e fffe ff8d 0002 
	ff11 000d ffb6 0004 002e fffd 0084 ffff 
	ff6b 0006 ffa2 fffe 0000 fffc fff1 ffff 
	007b fffb 00ea fff8 00c3 fffd 0036 0001 
	ffb9 fffe fff7 fffa 005c 0002 fe6e 0003 
	ff8a 0001 0019 0002 ff79 0003 00ee 0001 
	00b5 ffff ffba 0004 ffd2 0004 ff4f 0000 

[MCU #32] ZZ:
[Y]:
	ff8e fff0 ff9f ff11 fffb ff43 0003 ff38 
	000d ff6b 007b 0006 ffb6 0004 fff6 0000 
	004e 0004 ffa2 fffb ffb9 ff8a fffe 00ea 
	fffe 002e fffe fffe 0001 ff8d fffd 0000 
	fff8 fff7 0001 00b5 ffff 0019 fffa 00c3 
	fffc 0084 0002 ffff fff1 fffd 005c 0002 
	ffba 0004 ff79 0002 0036 ffff 0001 fe6e 
	0003 ffd2 0004 00ee 0003 0001 ff4f 0000 

[MCU #32] Quantification:
[Y]:
	ffea fffb ffe0 ffd1 0000 fff1 0000 fff5 
	0003 ffdb 001e 0001 fff7 0000 0000 0000 
	0013 0001 ffee 0000 fffb fffa 0000 000d 
	0000 0009 0000 0000 0000 fffc 0000 0000 
	ffff ffff 0000 000a 0000 0000 0000 0008 
	0000 000c 0000 0000 0000 0000 0002 0000 
	fffc 0000 fffb 0000 0001 0000 0000 fff3 
	0000 ffff 0000 0008 0000 0000 fffb 0000 

[MCU #32] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -2, magnitude = 2, index = 1
		bitstream => writing 3 over 3 bits
		bitstream => writing 1 over 2 bits

AC:
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -32, magnitude = 6, index = 31
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 31 over 6 bits
	value = -47, magnitude = 6, index = 16
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 16 over 6 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -37, magnitude = 6, index = 26
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 26 over 6 bits
	value = 30, magnitude = 5, index = 30
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 30 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = 19, magnitude = 5, index = 19
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 19 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 13 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 8 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 2 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 2 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #33] Valeurs "niveaux de gris" initiales:
00 00 00 f0 f6 00 00 00    
00 00 e7 ef f6 fa 00 00    
00 de e8 ef f6 fa fd 00    
d8 e3 00 f3 f7 00 fd ff    
e0 e8 ef f5 f9 fc fe ff    
00 00 f4 00 00 fd 00 00    
00 f5 00 fa fd 00 ff 00    
f7 00 fb 00 00 ff 00 ff    

[MCU #33] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 f0 f6 00 00 00 
	00 00 e7 ef f6 fa 00 00 
	00 de e8 ef f6 fa fd 00 
	d8 e3 00 f3 f7 00 fd ff 
	e0 e8 ef f5 f9 fc fe ff 
	00 00 f4 00 00 fd 00 00 
	00 f5 00 fa fd 00 ff 00 
	f7 00 fb 00 00 ff 00 ff 

[MCU #33] Downsampling:
[Y]:
	00 00 00 f0 f6 00 00 00 
	00 00 e7 ef f6 fa 00 00 
	00 de e8 ef f6 fa fd 00 
	d8 e3 00 f3 f7 00 fd ff 
	e0 e8 ef f5 f9 fc fe ff 
	00 00 f4 00 00 fd 00 00 
	00 f5 00 fa fd 00 ff 00 
	f7 00 fb 00 00 ff 00 ff 

[MCU #33] DCT:
[Y]:
	004b ffde fee9 0005 ffff 0001 ffef 0002 
	ffeb fffc fee9 0007 0068 ffff ff7f 0001 
	fecc 001a ff9a 0006 0042 fffb 0095 fffd 
	ff42 000a ffa2 fffe 0014 fffb fffe fffd 
	007a fff4 010c ffef 00f0 fffb 0018 0001 
	ffa8 ffff 000d fff9 0078 0005 fe2e 0009 
	ff7a 0005 001d 0005 ff61 0004 00f4 ffff 
	00d4 fffb ffac 0006 ffc0 0006 ff41 0003 

[MCU #33] ZZ:
[Y]:
	004b ffde ffeb fecc fffc fee9 0005 fee9 
	001a ff42 007a 000a ff9a 0007 ffff 0001 
	0068 0006 ffa2 fff4 ffa8 ff7a ffff 010c 
	fffe 0042 ffff ffef 0002 ff7f fffb 0014 
	ffef 000d 0005 00d4 fffb 001d fff9 00f0 
	fffb 0095 0001 fffd fffe fffb 0078 0005 
	ffac 0006 ff61 0005 0018 fffd 0001 fe2e 
	0004 ffc0 0006 00f4 0009 ffff ff41 0003 

[MCU #33] Quantification:
[Y]:
	000f fff5 fff9 ffc3 0000 ffe9 0000 fff1 
	0006 ffd1 001e 0001 fff4 0000 0000 0000 
	001a 0001 ffee ffff fff9 fff9 0000 000f 
	0000 000d 0000 ffff 0000 fffc 0000 0001 
	fffd 0001 0000 000c 0000 0000 0000 000a 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fffa 0000 0000 0000 0000 fff1 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #33] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 37, magnitude = 6, index = 37
		bitstream => writing 14 over 4 bits
		bitstream => writing 37 over 6 bits

AC:
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -61, magnitude = 6, index = 2
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 2 over 6 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -47, magnitude = 6, index = 16
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 16 over 6 bits
	value = 30, magnitude = 5, index = 30
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 30 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 13 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 10 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 0 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #34] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #34] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #34] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #34] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #34] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #34] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #34] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 9, magnitude = 4, index = 9
		bitstream => writing 5 over 3 bits
		bitstream => writing 9 over 4 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #35] Valeurs "niveaux de gris" initiales:
00 00 00 ff ff 00 00 00    
00 00 ff ff ff ff 00 00    
00 ff ff ff ff ff ff 00    
ff ff 00 ff ff 00 ff ff    
ff ff ff ff ff ff ff ff    
00 00 ff 00 00 ff 00 00    
00 ff 00 ff ff 00 ff 00    
ff 00 ff 00 00 ff 00 ff    

[MCU #35] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #35] Downsampling:
[Y]:
	00 00 00 ff ff 00 00 00 
	00 00 ff ff ff ff 00 00 
	00 ff ff ff ff ff ff 00 
	ff ff 00 ff ff 00 ff ff 
	ff ff ff ff ff ff ff ff 
	00 00 ff 00 00 ff 00 00 
	00 ff 00 ff ff 00 ff 00 
	ff 00 ff 00 00 ff 00 ff 

[MCU #35] DCT:
[Y]:
	007b 0000 fee3 0000 0000 0000 ffeb 0000 
	fffa 0000 feda 0000 006a 0000 ff7d 0000 
	feb2 0000 ff8b 0000 0045 0000 0099 0000 
	ff36 0000 ffa0 0000 0018 0000 0003 0000 
	007f 0000 011c 0000 00ff 0000 0014 0000 
	ffa6 0000 0013 0000 007d 0000 fe1e 0000 
	ff76 0000 001a 0000 ff59 0000 00f4 0000 
	00dc 0000 ffa8 0000 ffb9 0000 ff3c 0000 

[MCU #35] ZZ:
[Y]:
	007b 0000 fffa feb2 0000 fee3 0000 feda 
	0000 ff36 007f 0000 ff8b 0000 0000 0000 
	006a 0000 ffa0 0000 ffa6 ff76 0000 011c 
	0000 0045 0000 ffeb 0000 ff7d 0000 0018 
	0000 0013 0000 00dc 0000 001a 0000 00ff 
	0000 0099 0000 0000 0003 0000 007d 0000 
	ffa8 0000 ff59 0000 0014 0000 0000 fe1e 
	0000 ffb9 0000 00f4 0000 0000 ff3c 0000 

[MCU #35] Quantification:
[Y]:
	0018 0000 fffe ffbe 0000 ffe9 0000 fff0 
	0000 ffce 001f 0000 fff2 0000 0000 0000 
	001a 0000 ffed 0000 fff9 fff8 0000 0010 
	0000 000d 0000 fffe 0000 fffb 0000 0001 
	0000 0002 0000 000c 0000 0000 0000 000b 
	0000 000d 0000 0000 0000 0000 0003 0000 
	fffb 0000 fff9 0000 0000 0000 0000 fff0 
	0000 fffe 0000 0008 0000 0000 fffa 0000 

[MCU #35] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 15 over 5 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 1 over 4 bits
	value = 26, magnitude = 5, index = 26
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 26 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 12 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 16 over 5 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 13 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 66, huffman path = 1016, nbits = 10
		bitstream => writing 1016 over 10 bits
		bitstream => writing 3 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 0 over 3 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 69, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 15 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #36] Valeurs "niveaux de gris" initiales:
00 00 ff ff 00 00 00 00    
00 ff ff ff ff 00 00 00    
ff ff ff ff ff ff 00 00    
ff 00 ff ff 00 ff ff ff    
ff ff ff ff ff ff ff ff    
00 ff 00 00 ff 00 00 00    
ff 00 ff ff 00 ff 00 00    
00 ff 00 00 ff 00 ff ff    

[MCU #36] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #36] Downsampling:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #36] DCT:
[Y]:
	007b 00b2 ff36 ffa2 0000 fff7 000e fff5 
	fffa 00a5 ff30 ff69 0000 006b 005c ffdc 
	feb2 000f ffad ff7c 0000 ffc5 ff93 0030 
	ff36 0030 ffbc ffca 0000 0004 fffd 0001 
	007f feee 00c9 ff99 0000 008b fff1 001d 
	ffa6 0023 000d 001e 0000 014e 0154 ff7c 
	ff76 fffe 0012 004c 0000 ff23 ff53 003b 
	00dc 0076 ffc2 0048 0000 0043 008a ffbf 

[MCU #36] ZZ:
[Y]:
	007b 00b2 fffa feb2 00a5 ff36 ffa2 ff30 
	000f ff36 007f 0030 ffad ff69 0000 fff7 
	0000 ff7c ffbc feee ffa6 ff76 0023 00c9 
	ffca 0000 006b 000e fff5 005c ffc5 0000 
	ff99 000d fffe 00dc 0076 0012 001e 0000 
	0004 ff93 ffdc 0030 fffd 008b 0000 004c 
	ffc2 0048 0000 014e fff1 0001 001d 0154 
	ff23 0000 0043 ff53 ff7c 003b 008a ffbf 

[MCU #36] Quantification:
[Y]:
	0018 003b fffe ffbe 0017 fff0 fffa fff5 
	0003 ffce 001f 0008 fff6 fff8 0000 0000 
	0000 ffdf fff3 ffd9 fff9 fff8 0001 000b 
	fff3 0000 000f 0001 0000 0003 fffe 0000 
	ffec 0001 0000 000c 0005 0000 0000 0000 
	0000 fff7 fffe 0002 0000 0004 0000 0002 
	fffc 0003 0000 000c 0000 0000 0000 000b 
	fff6 0000 0002 fffb fffd 0001 0004 fffe 

[MCU #36] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = 59, magnitude = 6, index = 59
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 59 over 6 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -33, magnitude = 6, index = 30
	RLE code = 54, huffman path = 65425, nbits = 16
		bitstream => writing 65425 over 16 bits
		bitstream => writing 30 over 6 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = -39, magnitude = 6, index = 24
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 24 over 6 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 11 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 6 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #37] Valeurs "niveaux de gris" initiales:
00 00 ff ff 00 00 00 00    
00 ff ff ff ff 00 00 00    
ff ff ff ff ff fe 00 00    
ff 00 ff ff 00 fb f7 f3    
ff ff ff fd fb f7 f0 ea    
00 ff 00 00 f8 00 00 00    
ff 00 fd fa 00 ed 00 00    
00 ff 00 00 f1 00 da ca    

[MCU #37] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff fe 00 00 
	ff 00 ff ff 00 fb f7 f3 
	ff ff ff fd fb f7 f0 ea 
	00 ff 00 00 f8 00 00 00 
	ff 00 fd fa 00 ed 00 00 
	00 ff 00 00 f1 00 da ca 

[MCU #37] Downsampling:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff fe 00 00 
	ff 00 ff ff 00 fb f7 f3 
	ff ff ff fd fb f7 f0 ea 
	00 ff 00 00 f8 00 00 00 
	ff 00 fd fa 00 ed 00 00 
	00 ff 00 00 f1 00 da ca 

[MCU #37] DCT:
[Y]:
	0061 00cd ff2c ffa6 fffc fff9 000f fff3 
	0011 008d ff39 ff65 0003 0069 005a ffdf 
	feac 0016 ffa9 ff7f fffd ffc5 ff95 002c 
	ff41 0021 ffc8 ffc3 0003 0004 fff9 0005 
	006d ff06 00b7 ffa3 fffa 008b fff7 0017 
	ffb0 0016 0018 0017 0006 014d 014d ff84 
	ff76 ffff 000f 0050 fffa ff25 ff59 0033 
	00da 0077 ffc4 0046 0003 0041 0086 ffc4 

[MCU #37] ZZ:
[Y]:
	0061 00cd 0011 feac 008d ff2c ffa6 ff39 
	0016 ff41 006d 0021 ffa9 ff65 fffc fff9 
	0003 ff7f ffc8 ff06 ffb0 ff76 0016 00b7 
	ffc3 fffd 0069 000f fff3 005a ffc5 0003 
	ffa3 0018 ffff 00da 0077 000f 0017 fffa 
	0004 ff95 ffdf 002c fff9 008b 0006 0050 
	ffc4 0046 fffa 014d fff7 0005 0017 014d 
	ff25 0003 0041 ff59 ff84 0033 0086 ffc4 

[MCU #37] Quantification:
[Y]:
	0013 0044 0005 ffbc 0014 ffef fffa fff5 
	0005 ffd1 001b 0005 fff6 fff7 0000 0000 
	0000 ffe0 fff5 ffdd fffa fff8 0001 000a 
	fff1 0000 000f 0001 0000 0003 fffe 0000 
	ffee 0003 0000 000c 0005 0000 0000 0000 
	0000 fff7 ffff 0002 0000 0004 0000 0002 
	fffc 0003 0000 000c 0000 0000 0000 000b 
	fff7 0000 0002 fffb fffd 0001 0004 fffe 

[MCU #37] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -5, magnitude = 3, index = 2
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits

AC:
	value = 68, magnitude = 7, index = 68
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 68 over 7 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -68, magnitude = 7, index = 59
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 59 over 7 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = -17, magnitude = 5, index = 14
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 14 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -47, magnitude = 6, index = 16
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 16 over 6 bits
	value = 27, magnitude = 5, index = 27
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 27 over 5 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -32, magnitude = 6, index = 31
	RLE code = 54, huffman path = 65425, nbits = 16
		bitstream => writing 65425 over 16 bits
		bitstream => writing 31 over 6 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -35, magnitude = 6, index = 28
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 28 over 6 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 13 over 5 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 6 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #38] Valeurs "niveaux de gris" initiales:
00 00 fd fc 00 00 00 00    
00 fb f7 f5 f1 00 00 00    
f6 f3 ed ea e5 df 00 00    
ec 00 e0 d7 00 cc c5 c0    
e1 d8 cf c6 bc b6 af a8    
00 c6 00 00 a7 00 00 00    
c5 00 aa 9c 00 8a 00 00    
00 a9 00 00 85 00 79 75    

[MCU #38] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 fd fc 00 00 00 00 
	00 fb f7 f5 f1 00 00 00 
	f6 f3 ed ea e5 df 00 00 
	ec 00 e0 d7 00 cc c5 c0 
	e1 d8 cf c6 bc b6 af a8 
	00 c6 00 00 a7 00 00 00 
	c5 00 aa 9c 00 8a 00 00 
	00 a9 00 00 85 00 79 75 

[MCU #38] Downsampling:
[Y]:
	00 00 fd fc 00 00 00 00 
	00 fb f7 f5 f1 00 00 00 
	f6 f3 ed ea e5 df 00 00 
	ec 00 e0 d7 00 cc c5 c0 
	e1 d8 cf c6 bc b6 af a8 
	00 c6 00 00 a7 00 00 00 
	c5 00 aa 9c 00 8a 00 00 
	00 a9 00 00 85 00 79 75 

[MCU #38] DCT:
[Y]:
	ff8f 00e5 ff4d ffa2 fffe 000b 0018 fff1 
	0086 0081 ff33 ff6a 0002 004f 0040 ffec 
	fed4 000c ff9f ff81 fffa ffd8 ffb3 001c 
	ff56 0000 ffdd ffbb ffff 0008 ffeb 000b 
	0038 ff47 0088 ffb5 fffc 0090 001f 0003 
	ffbd fffa 002a 0016 0011 010c 0100 ffb4 
	ff9d 0003 0004 0043 fff2 ff6e ff9f 000b 
	00ab 006c ffda 0041 0009 0025 005b ffdc 

[MCU #38] ZZ:
[Y]:
	ff8f 00e5 0086 fed4 0081 ff4d ffa2 ff33 
	000c ff56 0038 0000 ff9f ff6a fffe 000b 
	0002 ff81 ffdd ff47 ffbd ff9d fffa 0088 
	ffbb fffa 004f 0018 fff1 0040 ffd8 ffff 
	ffb5 002a 0003 00ab 006c 0004 0016 fffc 
	0008 ffb3 ffec 001c ffeb 0090 0011 0043 
	ffda 0041 fff2 010c 001f 000b 0003 0100 
	ff6e 0009 0025 ff9f ffb4 000b 005b ffdc 

[MCU #38] Quantification:
[Y]:
	ffea 004c 002c ffc4 0012 fff2 fffa fff5 
	0003 ffd6 000e 0000 fff4 fff8 0000 0000 
	0000 ffe1 fff9 ffe6 fffb fffb 0000 0008 
	ffef ffff 000b 0002 ffff 0002 ffff 0000 
	fff1 0006 0000 000a 0005 0000 0000 0000 
	0001 fff9 ffff 0001 0000 0004 0000 0002 
	fffe 0003 0000 000a 0001 0000 0000 0008 
	fffa 0000 0001 fffd fffe 0000 0002 ffff 

[MCU #38] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -41, magnitude = 6, index = 22
		bitstream => writing 14 over 4 bits
		bitstream => writing 22 over 6 bits

AC:
	value = 76, magnitude = 7, index = 76
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 76 over 7 bits
	value = 44, magnitude = 6, index = 44
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 44 over 6 bits
	value = -60, magnitude = 6, index = 3
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 3 over 6 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 18 over 5 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -42, magnitude = 6, index = 21
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 21 over 6 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -31, magnitude = 5, index = 0
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 0 over 5 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -26, magnitude = 5, index = 5
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 5 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = -17, magnitude = 5, index = 14
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 14 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 8 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #39] Valeurs "niveaux de gris" initiales:
00 00 ea e5 00 00 00 00    
00 de d8 d3 ce 00 00 00    
d0 ca c1 be b5 ae 00 00    
b9 00 ac a6 00 9a 95 93    
a0 9a 93 90 8b 87 81 80    
00 85 00 00 7c 00 00 00    
7b 00 75 73 00 70 00 00    
00 71 00 00 6e 00 72 73    

[MCU #39] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 ea e5 00 00 00 00 
	00 de d8 d3 ce 00 00 00 
	d0 ca c1 be b5 ae 00 00 
	b9 00 ac a6 00 9a 95 93 
	a0 9a 93 90 8b 87 81 80 
	00 85 00 00 7c 00 00 00 
	7b 00 75 73 00 70 00 00 
	00 71 00 00 6e 00 72 73 

[MCU #39] Downsampling:
[Y]:
	00 00 ea e5 00 00 00 00 
	00 de d8 d3 ce 00 00 00 
	d0 ca c1 be b5 ae 00 00 
	b9 00 ac a6 00 9a 95 93 
	a0 9a 93 90 8b 87 81 80 
	00 85 00 00 7c 00 00 00 
	7b 00 75 73 00 70 00 00 
	00 71 00 00 6e 00 72 73 

[MCU #39] DCT:
[Y]:
	fece 00ac ff68 ffa6 0001 000d 0014 fff6 
	008c 0091 ff4f ff7a fffd 003f 0032 ffed 
	ff37 0003 ffa8 ff8b fff9 ffe8 ffc5 0019 
	ff69 fffe ffd6 ffc2 fffb 000e fff9 0004 
	0025 ff66 006d ffc0 0004 007c 001f 0008 
	ffc4 fffc 001d 0012 0008 00d0 00c7 ffbd 
	ffbc 0006 000e 0035 ffff ffa5 ffc4 000e 
	0079 0050 ffe3 0034 0002 0017 0043 ffdd 

[MCU #39] ZZ:
[Y]:
	fece 00ac 008c ff37 0091 ff68 ffa6 ff4f 
	0003 ff69 0025 fffe ffa8 ff7a 0001 000d 
	fffd ff8b ffd6 ff66 ffc4 ffbc fffc 006d 
	ffc2 fff9 003f 0014 fff6 0032 ffe8 fffb 
	ffc0 001d 0006 0079 0050 000e 0012 0004 
	000e ffc5 ffed 0019 fff9 007c 0008 0035 
	ffe3 0034 ffff 00d0 001f 0004 0008 00c7 
	ffa5 0002 0017 ffc4 ffbd 000e 0043 ffdd 

[MCU #39] Quantification:
[Y]:
	ffc3 0039 002e ffd8 0014 fff4 fffa fff7 
	0000 ffdb 0009 0000 fff5 fff9 0000 0000 
	0000 ffe3 fff8 ffea fffb fffc 0000 0006 
	fff1 ffff 0009 0002 0000 0001 ffff 0000 
	fff4 0004 0000 0007 0004 0000 0000 0000 
	0002 fffb ffff 0001 0000 0004 0000 0001 
	ffff 0002 0000 0008 0001 0000 0000 0006 
	fffc 0000 0000 fffe ffff 0000 0002 ffff 

[MCU #39] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -39, magnitude = 6, index = 24
		bitstream => writing 14 over 4 bits
		bitstream => writing 24 over 6 bits

AC:
	value = 57, magnitude = 6, index = 57
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 57 over 6 bits
	value = 46, magnitude = 6, index = 46
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 46 over 6 bits
	value = -40, magnitude = 6, index = 23
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 23 over 6 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -37, magnitude = 6, index = 26
	RLE code = 22, huffman path = 65412, nbits = 16
		bitstream => writing 65412 over 16 bits
		bitstream => writing 26 over 6 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -29, magnitude = 5, index = 2
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 2 over 5 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -22, magnitude = 5, index = 9
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 9 over 5 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 6 over 3 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 6 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #40] Valeurs "niveaux de gris" initiales:
00 00 c4 c0 00 00 00 00    
00 b5 b0 ac a7 00 00 00    
a0 a0 9b 99 93 90 00 00    
8e 00 88 88 00 82 7d 7a    
7f 7d 7b 79 79 77 77 76    
00 76 00 00 73 00 00 00    
72 00 75 72 00 74 00 00    
00 75 00 00 7c 00 82 82    

[MCU #40] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 c4 c0 00 00 00 00 
	00 b5 b0 ac a7 00 00 00 
	a0 a0 9b 99 93 90 00 00 
	8e 00 88 88 00 82 7d 7a 
	7f 7d 7b 79 79 77 77 76 
	00 76 00 00 73 00 00 00 
	72 00 75 72 00 74 00 00 
	00 75 00 00 7c 00 82 82 

[MCU #40] Downsampling:
[Y]:
	00 00 c4 c0 00 00 00 00 
	00 b5 b0 ac a7 00 00 00 
	a0 a0 9b 99 93 90 00 00 
	8e 00 88 88 00 82 7d 7a 
	7f 7d 7b 79 79 77 77 76 
	00 76 00 00 73 00 00 00 
	72 00 75 72 00 74 00 00 
	00 75 00 00 7c 00 82 82 

[MCU #40] DCT:
[Y]:
	fe6c 007c ff7f ffb4 fffe 0005 000b fffa 
	004c 007e ff6d ff92 fffc 003b 0031 ffea 
	ff71 0006 ffbe ff9d fffd ffea ffca 001a 
	ff82 000e ffd6 ffcf fffd 0012 0005 ffff 
	002b ff70 0062 ffc7 0004 005e 000a 000e 
	ffc9 000b 000c 0010 0002 00b5 00b4 ffbd 
	ffc4 ffff 000f 002a 0003 ffa8 ffbe 0016 
	0069 003e ffe5 0029 0000 001d 0044 ffe0 

[MCU #40] ZZ:
[Y]:
	fe6c 007c 004c ff71 007e ff7f ffb4 ff6d 
	0006 ff82 002b 000e ffbe ff92 fffe 0005 
	fffc ff9d ffd6 ff70 ffc9 ffc4 000b 0062 
	ffcf fffd 003b 000b fffa 0031 ffea fffd 
	ffc7 000c ffff 0069 003e 000f 0010 0004 
	0012 ffca ffea 001a 0005 005e 0002 002a 
	ffe5 0029 0003 00b5 000a ffff 000e 00b4 
	ffa8 0000 001d ffbe ffbd 0016 0044 ffe0 

[MCU #40] Quantification:
[Y]:
	ffb0 0029 0019 ffe4 0012 fff6 fffb fff8 
	0001 ffe1 000a 0002 fff8 fffa 0000 0000 
	ffff ffe8 fff8 ffec fffc fffd 0000 0005 
	fff4 0000 0008 0001 0000 0001 0000 0000 
	fff5 0001 0000 0006 0003 0000 0000 0000 
	0002 fffc ffff 0001 0000 0003 0000 0001 
	ffff 0002 0000 0006 0000 0000 0000 0006 
	fffc 0000 0001 fffe ffff 0000 0002 ffff 

[MCU #40] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -19, magnitude = 5, index = 12
		bitstream => writing 6 over 3 bits
		bitstream => writing 12 over 5 bits

AC:
	value = 41, magnitude = 6, index = 41
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 41 over 6 bits
	value = 25, magnitude = 5, index = 25
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 25 over 5 bits
	value = -28, magnitude = 5, index = 3
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 3 over 5 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 18 over 5 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -31, magnitude = 5, index = 0
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 0 over 5 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 7 over 5 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 11 over 5 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 5 over 3 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 4 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 6 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 6 over 3 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 6 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #41] Valeurs "niveaux de gris" initiales:
00 00 a1 9e 00 00 00 00    
00 93 8e 8a 87 00 00 00    
85 82 7f 7e 7a 76 00 00    
79 00 75 75 00 73 70 73    
75 74 74 73 75 71 75 73    
00 74 00 00 7b 00 00 00    
7b 00 7e 81 00 88 00 00    
00 8b 00 00 96 00 9d 9c    

[MCU #41] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 a1 9e 00 00 00 00 
	00 93 8e 8a 87 00 00 00 
	85 82 7f 7e 7a 76 00 00 
	79 00 75 75 00 73 70 73 
	75 74 74 73 75 71 75 73 
	00 74 00 00 7b 00 00 00 
	7b 00 7e 81 00 88 00 00 
	00 8b 00 00 96 00 9d 9c 

[MCU #41] Downsampling:
[Y]:
	00 00 a1 9e 00 00 00 00 
	00 93 8e 8a 87 00 00 00 
	85 82 7f 7e 7a 76 00 00 
	79 00 75 75 00 73 70 73 
	75 74 74 73 75 71 75 73 
	00 74 00 00 7b 00 00 00 
	7b 00 7e 81 00 88 00 00 
	00 8b 00 00 96 00 9d 9c 

[MCU #41] DCT:
[Y]:
	fe40 005c ff96 ffc4 0000 fffb 0001 ffff 
	0000 006f ff89 ffa4 fffd 003d 0035 ffe9 
	ff92 fffe ffcf ffae fffc ffe6 ffc7 0019 
	ff91 001e ffce ffde fffd 0011 0010 fffa 
	003b ff73 0061 ffc7 0003 0044 fff3 0016 
	ffcc 0017 ffff 0010 0000 00ab 00b3 ffb7 
	ffc3 fff8 0010 0021 0006 ff9d ffac 0023 
	0065 003a ffe4 0023 fffe 0028 0047 ffdd 

[MCU #41] ZZ:
[Y]:
	fe40 005c 0000 ff92 006f ff96 ffc4 ff89 
	fffe ff91 003b 001e ffcf ffa4 0000 fffb 
	fffd ffae ffce ff73 ffcc ffc3 0017 0061 
	ffde fffc 003d 0001 ffff 0035 ffe6 fffd 
	ffc7 ffff fff8 0065 003a 0010 0010 0003 
	0011 ffc7 ffe9 0019 0010 0044 0000 0021 
	ffe4 0023 0006 00ab fff3 fffa 0016 00b3 
	ff9d fffe 0028 ffac ffb7 0023 0047 ffdd 

[MCU #41] Quantification:
[Y]:
	ffa7 001e 0000 ffea 000f fff8 fffc fffa 
	0000 ffe5 000e 0005 fffa fffb 0000 0000 
	0000 ffec fff6 ffec fffc fffd 0001 0005 
	fff8 0000 0008 0000 0000 0002 ffff 0000 
	fff5 0000 0000 0005 0002 0000 0000 0000 
	0002 fffb ffff 0001 0000 0002 0000 0001 
	ffff 0001 0000 0006 0000 0000 0000 0005 
	fffc 0000 0001 fffe fffe 0001 0002 ffff 

[MCU #41] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -9, magnitude = 4, index = 6
		bitstream => writing 5 over 3 bits
		bitstream => writing 6 over 4 bits

AC:
	value = 30, magnitude = 5, index = 30
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 30 over 5 bits
	value = -22, magnitude = 5, index = 9
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 9 over 5 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 15 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -27, magnitude = 5, index = 4
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 4 over 5 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 11 over 5 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 11 over 5 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 8 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 5 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 6 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 5 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #42] Valeurs "niveaux de gris" initiales:
00 00 70 64 00 00 00 00    
00 6f 65 56 4a 00 00 00    
6e 6b 60 53 48 38 00 00    
71 00 5e 53 00 3b 2e 27    
74 6d 65 5b 4a 3e 33 28    
00 76 00 00 51 00 00 00    
89 00 79 6c 00 4f 00 00    
00 93 00 00 6a 00 4f 45    

[MCU #42] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 70 64 00 00 00 00 
	00 6f 65 56 4a 00 00 00 
	6e 6b 60 53 48 38 00 00 
	71 00 5e 53 00 3b 2e 27 
	74 6d 65 5b 4a 3e 33 28 
	00 76 00 00 51 00 00 00 
	89 00 79 6c 00 4f 00 00 
	00 93 00 00 6a 00 4f 45 

[MCU #42] Downsampling:
[Y]:
	00 00 70 64 00 00 00 00 
	00 6f 65 56 4a 00 00 00 
	6e 6b 60 53 48 38 00 00 
	71 00 5e 53 00 3b 2e 27 
	74 6d 65 5b 4a 3e 33 28 
	00 76 00 00 51 00 00 00 
	89 00 79 6c 00 4f 00 00 
	00 93 00 00 6a 00 4f 45 

[MCU #42] DCT:
[Y]:
	fd93 009f ffc1 ffd3 fff7 fffa fffb ffff 
	ffed 0025 ffbc ffbd fffe 0031 002c fff8 
	ffba ffdb ffdf ffc8 fff1 ffe1 ffd5 000b 
	ffc3 0001 ffe0 ffe8 fffd 000e 000f fffa 
	0012 ffbf 0025 ffeb 0001 0022 fff8 000c 
	ffe6 000d 0002 000a 001b 008f 008b ffe6 
	ffd1 ffea 000f 0015 fff5 ffa1 ffad 000d 
	0054 0039 fff6 0010 000a 002c 0036 fff2 

[MCU #42] ZZ:
[Y]:
	fd93 009f ffed ffba 0025 ffc1 ffd3 ffbc 
	ffdb ffc3 0012 0001 ffdf ffbd fff7 fffa 
	fffe ffc8 ffe0 ffbf ffe6 ffd1 000d 0025 
	ffe8 fff1 0031 fffb ffff 002c ffe1 fffd 
	ffeb 0002 ffea 0054 0039 000f 000a 0001 
	000e ffd5 fff8 000b 000f 0022 001b 0015 
	fff6 0010 fff5 008f fff8 fffa 000c 008b 
	ffa1 000a 002c ffad ffe6 000d 0036 fff2 

[MCU #42] Quantification:
[Y]:
	ff84 0035 fffa fff2 0005 fffb fffd fffd 
	fff7 fff1 0004 0000 fffc fffd 0000 0000 
	0000 fff2 fffa fff7 fffe fffe 0000 0002 
	fffa fffd 0007 0000 0000 0001 ffff 0000 
	fffc 0000 fffe 0004 0002 0000 0000 0000 
	0002 fffd 0000 0000 0000 0001 0000 0000 
	0000 0000 0000 0005 0000 0000 0000 0004 
	fffc 0000 0001 fffe 0000 0000 0001 0000 

[MCU #42] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -35, magnitude = 6, index = 28
		bitstream => writing 14 over 4 bits
		bitstream => writing 28 over 6 bits

AC:
	value = 53, magnitude = 6, index = 53
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 53 over 6 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 1 over 4 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 83, huffman path = 65438, nbits = 16
		bitstream => writing 65438 over 16 bits
		bitstream => writing 5 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 4 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #43] Valeurs "niveaux de gris" initiales:
00 00 1c 1b 00 00 00 00    
00 1b 19 17 16 00 00 00    
1e 19 17 17 14 15 00 00    
1f 00 17 17 00 16 17 19    
21 20 1c 1a 1b 1a 1f 1f    
00 25 00 00 23 00 00 00    
35 00 2d 30 00 30 00 00    
00 3d 00 00 40 00 45 47    

[MCU #43] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 1c 1b 00 00 00 00 
	00 1b 19 17 16 00 00 00 
	1e 19 17 17 14 15 00 00 
	1f 00 17 17 00 16 17 19 
	21 20 1c 1a 1b 1a 1f 1f 
	00 25 00 00 23 00 00 00 
	35 00 2d 30 00 30 00 00 
	00 3d 00 00 40 00 45 47 

[MCU #43] Downsampling:
[Y]:
	00 00 1c 1b 00 00 00 00 
	00 1b 19 17 16 00 00 00 
	1e 19 17 17 14 15 00 00 
	1f 00 17 17 00 16 17 19 
	21 20 1c 1a 1b 1a 1f 1f 
	00 25 00 00 23 00 00 00 
	35 00 2d 30 00 30 00 00 
	00 3d 00 00 40 00 45 47 

[MCU #43] DCT:
[Y]:
	fc96 0011 fff6 fff7 0002 fff9 fff9 0002 
	ffd1 0019 ffe7 fff0 fffd 0013 0014 fff7 
	fffb fff3 fff9 ffee fffe fff3 ffeb 0009 
	ffe0 0012 ffec fffd fffd 0006 000d fff9 
	0018 ffd4 001d fff0 0001 0001 ffed 000d 
	fff1 0013 fff7 0008 0003 0032 0037 ffea 
	ffef fff5 0006 0003 ffff ffda ffdb 000e 
	001b 0011 fffa 0008 0000 0013 0018 fff4 

[MCU #43] ZZ:
[Y]:
	fc96 0011 ffd1 fffb 0019 fff6 fff7 ffe7 
	fff3 ffe0 0018 0012 fff9 fff0 0002 fff9 
	fffd ffee ffec ffd4 fff1 ffef 0013 001d 
	fffd fffe 0013 fff9 0002 0014 fff3 fffd 
	fff0 fff7 fff5 001b 0011 0006 0008 0001 
	0006 ffeb fff7 0009 000d 0001 0003 0003 
	fffa 0008 ffff 0032 ffed fff9 000d 0037 
	ffda 0000 0013 ffdb ffea 000e 0018 fff4 

[MCU #43] Quantification:
[Y]:
	ff52 0005 fff1 ffff 0003 0000 0000 ffff 
	fffd fff8 0006 0003 0000 0000 0000 0000 
	0000 fffc fffc fffa ffff ffff 0000 0001 
	0000 0000 0002 0000 0000 0000 0000 0000 
	fffd ffff ffff 0001 0000 0000 0000 0000 
	0000 ffff 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0001 0000 0000 0000 0001 
	ffff 0000 0000 ffff 0000 0000 0000 0000 

[MCU #43] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -50, magnitude = 6, index = 13
		bitstream => writing 14 over 4 bits
		bitstream => writing 13 over 6 bits

AC:
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 0 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 83, huffman path = 65438, nbits = 16
		bitstream => writing 65438 over 16 bits
		bitstream => writing 3 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 82, huffman path = 2039, nbits = 11
		bitstream => writing 2039 over 11 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 81, huffman path = 122, nbits = 7
		bitstream => writing 122 over 7 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 145, huffman path = 505, nbits = 9
		bitstream => writing 505 over 9 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #44] Valeurs "niveaux de gris" initiales:
00 00 1e 1e 00 00 00 00    
00 19 19 1a 1a 00 00 00    
16 19 1a 1a 1e 1c 00 00    
1b 00 1f 1f 00 24 28 28    
1f 22 26 29 2a 30 32 3a    
00 2c 00 00 3d 00 00 00    
3d 00 41 4a 00 5a 00 00    
00 55 00 00 6a 00 7e 89    

[MCU #44] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 1e 1e 00 00 00 00 
	00 19 19 1a 1a 00 00 00 
	16 19 1a 1a 1e 1c 00 00 
	1b 00 1f 1f 00 24 28 28 
	1f 22 26 29 2a 30 32 3a 
	00 2c 00 00 3d 00 00 00 
	3d 00 41 4a 00 5a 00 00 
	00 55 00 00 6a 00 7e 89 

[MCU #44] Downsampling:
[Y]:
	00 00 1e 1e 00 00 00 00 
	00 19 19 1a 1a 00 00 00 
	16 19 1a 1a 1e 1c 00 00 
	1b 00 1f 1f 00 24 28 28 
	1f 22 26 29 2a 30 32 3a 
	00 2c 00 00 3d 00 00 00 
	3d 00 41 4a 00 5a 00 00 
	00 55 00 00 6a 00 7e 89 

[MCU #44] DCT:
[Y]:
	fcd6 ffef ffed fff3 0002 fff2 fff6 0005 
	ffa0 0030 ffe0 fff1 fffb 001c 001c fff2 
	0003 fff0 0006 ffec 0004 ffef ffdf 0010 
	ffd1 0029 ffde 0006 fffe 000a 0019 fff2 
	0032 ffb6 0034 ffe2 0003 0000 ffde 0015 
	ffe7 0025 ffe9 000e fff6 0040 004d ffd7 
	ffe8 fff1 000c 0002 0008 ffc8 ffc5 0022 
	0024 0010 fff0 0008 fffc 0018 0027 ffe8 

[MCU #44] ZZ:
[Y]:
	fcd6 ffef ffa0 0003 0030 ffed fff3 ffe0 
	fff0 ffd1 0032 0029 0006 fff1 0002 fff2 
	fffb ffec ffde ffb6 ffe7 ffe8 0025 0034 
	0006 0004 001c fff6 0005 001c ffef fffe 
	ffe2 ffe9 fff1 0024 0010 000c 000e 0003 
	000a ffdf fff2 0010 0019 0000 fff6 0002 
	fff0 0008 0008 0040 ffde fff2 0015 004d 
	ffc8 fffc 0018 ffc5 ffd7 0022 0027 ffe8 

[MCU #44] Quantification:
[Y]:
	ff5e fffb ffe0 0000 0006 ffff 0000 ffff 
	fffc fff5 000c 0006 0000 0000 0000 0000 
	ffff fffb fffa fff6 fffe ffff 0001 0003 
	0001 0000 0004 ffff 0000 0001 0000 0000 
	fffa fffd ffff 0002 0000 0000 0000 0000 
	0001 fffd 0000 0000 0001 0000 0000 0000 
	ffff 0000 0000 0002 ffff 0000 0000 0002 
	fffe 0000 0000 fffe ffff 0001 0001 0000 

[MCU #44] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 12, magnitude = 4, index = 12
		bitstream => writing 5 over 3 bits
		bitstream => writing 12 over 4 bits

AC:
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -32, magnitude = 6, index = 31
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 31 over 6 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 12 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 1 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 65, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #45] Valeurs "niveaux de gris" initiales:
00 00 20 23 00 00 00 00    
00 1f 21 28 2d 00 00 00    
24 26 2a 2d 33 3b 00 00    
2d 00 37 3c 00 4b 55 5a    
3d 44 4a 55 5b 66 6b 74    
00 5d 00 00 79 00 00 00    
74 00 8c 97 00 aa 00 00    
00 9f 00 00 c2 00 cc ce    

[MCU #45] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 20 23 00 00 00 00 
	00 1f 21 28 2d 00 00 00 
	24 26 2a 2d 33 3b 00 00 
	2d 00 37 3c 00 4b 55 5a 
	3d 44 4a 55 5b 66 6b 74 
	00 5d 00 00 79 00 00 00 
	74 00 8c 97 00 aa 00 00 
	00 9f 00 00 c2 00 cc ce 

[MCU #45] Downsampling:
[Y]:
	00 00 20 23 00 00 00 00 
	00 1f 21 28 2d 00 00 00 
	24 26 2a 2d 33 3b 00 00 
	2d 00 37 3c 00 4b 55 5a 
	3d 44 4a 55 5b 66 6b 74 
	00 5d 00 00 79 00 00 00 
	74 00 8c 97 00 aa 00 00 
	00 9f 00 00 c2 00 cc ce 

[MCU #45] DCT:
[Y]:
	fd8a ffde ffd7 fff7 0002 ffe4 ffee 0005 
	ff43 0038 ffe1 ffee ffff 0031 0030 ffe7 
	ffe1 fffd 0005 ffe9 0006 ffde ffc7 001f 
	ffbb 0043 ffcd 000a 0001 000a 0024 ffec 
	005b ff7b 0060 ffd4 0002 fffa ffbb 0025 
	ffdc 003c ffde 000d ffed 0077 0091 ffb3 
	ffc5 ffee 0016 000d 000b ff8d ff8c 003d 
	004d 001d ffdf 0010 fff7 0032 004d ffd5 

[MCU #45] ZZ:
[Y]:
	fd8a ffde ff43 ffe1 0038 ffd7 fff7 ffe1 
	fffd ffbb 005b 0043 0005 ffee 0002 ffe4 
	ffff ffe9 ffcd ff7b ffdc ffc5 003c 0060 
	000a 0006 0031 ffee 0005 0030 ffde 0001 
	ffd4 ffde ffee 004d 001d 0016 000d 0002 
	000a ffc7 ffe7 001f 0024 fffa ffed 000d 
	ffdf 0010 000b 0077 ffbb ffec 0025 0091 
	ff8d fff7 0032 ff8c ffb3 003d 004d ffd5 

[MCU #45] Quantification:
[Y]:
	ff82 fff5 ffc1 fffa 0008 fffd 0000 ffff 
	0000 ffef 0016 000b 0000 ffff 0000 ffff 
	0000 fffb fff6 ffed fffd fffd 0002 0005 
	0002 0001 0007 fffe 0000 0001 ffff 0000 
	fff8 fffc ffff 0004 0001 0000 0000 0000 
	0001 fffb ffff 0001 0001 0000 0000 0000 
	fffe 0000 0000 0004 fffe 0000 0001 0004 
	fffb 0000 0001 fffc fffe 0002 0002 ffff 

[MCU #45] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 36, magnitude = 6, index = 36
		bitstream => writing 14 over 4 bits
		bitstream => writing 36 over 6 bits

AC:
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -63, magnitude = 6, index = 0
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 0 over 6 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -17, magnitude = 5, index = 14
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 14 over 5 bits
	value = 22, magnitude = 5, index = 22
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 22 over 5 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 12 over 5 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 7 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #46] Valeurs "niveaux de gris" initiales:
00 00 5a 5f 00 00 00 00    
00 53 58 5e 64 00 00 00    
54 5a 60 65 69 6c 00 00    
63 00 6d 71 00 77 7a 79    
78 7f 7f 86 84 88 88 8c    
00 99 00 00 9e 00 00 00    
b4 00 b9 bb 00 bd 00 00    
00 d1 00 00 d4 00 d4 d3    

[MCU #46] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 5a 5f 00 00 00 00 
	00 53 58 5e 64 00 00 00 
	54 5a 60 65 69 6c 00 00 
	63 00 6d 71 00 77 7a 79 
	78 7f 7f 86 84 88 88 8c 
	00 99 00 00 9e 00 00 00 
	b4 00 b9 bb 00 bd 00 00 
	00 d1 00 00 d4 00 d4 d3 

[MCU #46] Downsampling:
[Y]:
	00 00 5a 5f 00 00 00 00 
	00 53 58 5e 64 00 00 00 
	54 5a 60 65 69 6c 00 00 
	63 00 6d 71 00 77 7a 79 
	78 7f 7f 86 84 88 88 8c 
	00 99 00 00 9e 00 00 00 
	b4 00 b9 bb 00 bd 00 00 
	00 d1 00 00 d4 00 d4 d3 

[MCU #46] DCT:
[Y]:
	fe53 002c ffaa ffe0 0000 ffe7 fff2 ffff 
	ff64 003e ffad ffcb 0003 0046 0040 ffe7 
	ff9b fffd fff4 ffce 0004 ffd6 ffb9 0023 
	ffa1 0044 ffce fff9 0002 000a 001b fff1 
	005f ff61 0075 ffc6 fffc 0019 ffc4 001e 
	ffd3 0036 ffea 0010 fff8 00ba 00cb ffa9 
	ffad ffe9 0012 001a ffff ff63 ff72 0036 
	0076 003a ffd8 001c fffe 003f 0062 ffd2 

[MCU #46] ZZ:
[Y]:
	fe53 002c ff64 ff9b 003e ffaa ffe0 ffad 
	fffd ffa1 005f 0044 fff4 ffcb 0000 ffe7 
	0003 ffce ffce ff61 ffd3 ffad 0036 0075 
	fff9 0004 0046 fff2 ffff 0040 ffd6 0002 
	ffc6 ffea ffe9 0076 003a 0012 0010 fffc 
	000a ffb9 ffe7 0023 001b 0019 fff8 001a 
	ffd8 001c ffff 00ba ffc4 fff1 001e 00cb 
	ff63 fffe 003f ff72 ffa9 0036 0062 ffd2 

[MCU #46] Quantification:
[Y]:
	ffab 000e ffcc ffec 0008 fff9 fffe fffc 
	0000 ffe9 0017 000b ffff fffd 0000 ffff 
	0000 fff4 fff6 ffea fffd fffc 0002 0006 
	ffff 0000 000a ffff 0000 0002 ffff 0000 
	fff5 fffd fffe 0006 0002 0000 0000 0000 
	0001 fffa ffff 0001 0001 0000 0000 0000 
	fffe 0001 0000 0007 ffff 0000 0000 0006 
	fff9 0000 0002 fffc fffe 0001 0003 ffff 

[MCU #46] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 41, magnitude = 6, index = 41
		bitstream => writing 14 over 4 bits
		bitstream => writing 41 over 6 bits

AC:
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 14 over 4 bits
	value = -52, magnitude = 6, index = 11
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 11 over 6 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 11 over 5 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 8 over 5 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -22, magnitude = 5, index = 9
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 9 over 5 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 6 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #47] Valeurs "niveaux de gris" initiales:
00 00 70 70 00 00 00 00    
00 6b 6d 6c 6d 00 00 00    
6e 70 6f 6f 70 6f 00 00    
79 00 7a 78 00 7a 7c 7a    
8a 8b 8a 8e 8c 8f 8e 8f    
00 a3 00 00 a5 00 00 00    
bc 00 be be 00 bf 00 00    
00 d5 00 00 d7 00 d7 d5    

[MCU #47] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 70 70 00 00 00 00 
	00 6b 6d 6c 6d 00 00 00 
	6e 70 6f 6f 70 6f 00 00 
	79 00 7a 78 00 7a 7c 7a 
	8a 8b 8a 8e 8c 8f 8e 8f 
	00 a3 00 00 a5 00 00 00 
	bc 00 be be 00 bf 00 00 
	00 d5 00 00 d7 00 d7 d5 

[MCU #47] Downsampling:
[Y]:
	00 00 70 70 00 00 00 00 
	00 6b 6d 6c 6d 00 00 00 
	6e 70 6f 6f 70 6f 00 00 
	79 00 7a 78 00 7a 7c 7a 
	8a 8b 8a 8e 8c 8f 8e 8f 
	00 a3 00 00 a5 00 00 00 
	bc 00 be be 00 bf 00 00 
	00 d5 00 00 d7 00 d7 d5 

[MCU #47] DCT:
[Y]:
	fe80 0049 ffa7 ffd9 ffff ffe9 fff4 0002 
	ff76 004d ffa4 ffbe 0000 0049 0043 ffe6 
	ff8e fff4 ffe9 ffc1 0000 ffd5 ffb6 0021 
	ff9a 003b ffc6 fff4 0001 000a 001b fff1 
	005d ff5b 0076 ffc6 ffff 0025 ffcc 0020 
	ffcc 0036 ffed 0013 fffe 00c7 00d7 ffaa 
	ffab ffe9 0015 001d 0000 ff60 ff6e 0036 
	0080 0040 ffdb 0020 0000 0041 0064 ffd1 

[MCU #47] ZZ:
[Y]:
	fe80 0049 ff76 ff8e 004d ffa7 ffd9 ffa4 
	fff4 ff9a 005d 003b ffe9 ffbe ffff ffe9 
	0000 ffc1 ffc6 ff5b ffcc ffab 0036 0076 
	fff4 0000 0049 fff4 0002 0043 ffd5 0001 
	ffc6 ffed ffe9 0080 0040 0015 0013 ffff 
	000a ffb6 ffe6 0021 001b 0025 fffe 001d 
	ffdb 0020 0000 00c7 ffcc fff1 0020 00d7 
	ff60 0000 0041 ff6e ffaa 0036 0064 ffd1 

[MCU #47] Quantification:
[Y]:
	ffb4 0018 ffd2 ffea 000b fff9 fffe fffb 
	fffd ffe7 0017 0009 fffe fffd 0000 ffff 
	0000 fff1 fff5 ffe9 fffc fffb 0002 0006 
	fffd 0000 000a ffff 0000 0002 ffff 0000 
	fff5 fffe fffe 0007 0003 0000 0000 0000 
	0001 fffa ffff 0001 0001 0001 0000 0001 
	fffe 0001 0000 0007 ffff 0000 0000 0007 
	fff9 0000 0002 fffb fffe 0001 0003 ffff 

[MCU #47] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 9, magnitude = 4, index = 9
		bitstream => writing 5 over 3 bits
		bitstream => writing 9 over 4 bits

AC:
	value = 24, magnitude = 5, index = 24
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 24 over 5 bits
	value = -46, magnitude = 6, index = 17
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 17 over 6 bits
	value = -22, magnitude = 5, index = 9
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 9 over 5 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -25, magnitude = 5, index = 6
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 6 over 5 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -23, magnitude = 5, index = 8
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 8 over 5 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 7 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #48] Valeurs "niveaux de gris" initiales:
00 00 6d 6e 00 00 00 00    
00 6b 6b 6a 6a 00 00 00    
6f 70 6f 6f 6f 6f 00 00    
7c 00 7d 7c 00 7e 7e 7e    
8e 8f 8e 8f 8f 90 92 91    
00 a8 00 00 a8 00 00 00    
c1 00 c0 c2 00 c2 00 00    
00 d5 00 00 d8 00 d9 da    

[MCU #48] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 6d 6e 00 00 00 00 
	00 6b 6b 6a 6a 00 00 00 
	6f 70 6f 6f 6f 6f 00 00 
	7c 00 7d 7c 00 7e 7e 7e 
	8e 8f 8e 8f 8f 90 92 91 
	00 a8 00 00 a8 00 00 00 
	c1 00 c0 c2 00 c2 00 00 
	00 d5 00 00 d8 00 d9 da 

[MCU #48] Downsampling:
[Y]:
	00 00 6d 6e 00 00 00 00 
	00 6b 6b 6a 6a 00 00 00 
	6f 70 6f 6f 6f 6f 00 00 
	7c 00 7d 7c 00 7e 7e 7e 
	8e 8f 8e 8f 8f 90 92 91 
	00 a8 00 00 a8 00 00 00 
	c1 00 c0 c2 00 c2 00 00 
	00 d5 00 00 d8 00 d9 da 

[MCU #48] DCT:
[Y]:
	fe88 0049 ffaa ffda ffff ffe9 fff5 0001 
	ff70 004d ffa6 ffbf fffe 0049 0043 ffe5 
	ff88 fff2 ffea ffc2 0001 ffd4 ffb6 0021 
	ff9a 003e ffc5 fff6 ffff 0008 0018 fff2 
	0061 ff58 0077 ffc5 0000 0025 ffcc 0022 
	ffcd 0037 ffeb 0014 0000 00ca 00da ffa8 
	ffa8 ffe8 0014 001d 0000 ff5c ff6b 0037 
	0081 0042 ffdc 0020 0000 0043 0064 ffd2 

[MCU #48] ZZ:
[Y]:
	fe88 0049 ff70 ff88 004d ffaa ffda ffa6 
	fff2 ff9a 0061 003e ffea ffbf ffff ffe9 
	fffe ffc2 ffc5 ff58 ffcd ffa8 0037 0077 
	fff6 0001 0049 fff5 0001 0043 ffd4 ffff 
	ffc5 ffeb ffe8 0081 0042 0014 0014 0000 
	0008 ffb6 ffe5 0021 0018 0025 0000 001d 
	ffdc 0020 0000 00ca ffcc fff2 0022 00da 
	ff5c 0000 0043 ff6b ffa8 0037 0064 ffd2 

[MCU #48] Quantification:
[Y]:
	ffb5 0018 ffd0 ffe8 000b fff9 fffe fffb 
	fffd ffe7 0018 000a fffe fffd 0000 ffff 
	0000 fff1 fff5 ffe8 fffc fffb 0002 0007 
	fffe 0000 000a ffff 0000 0002 ffff 0000 
	fff5 fffd fffe 0007 0003 0000 0000 0000 
	0001 fffa ffff 0001 0001 0001 0000 0001 
	fffe 0001 0000 0007 ffff 0000 0000 0007 
	fff9 0000 0002 fffb fffe 0001 0003 ffff 

[MCU #48] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 1, magnitude = 1, index = 1
		bitstream => writing 2 over 3 bits
		bitstream => writing 1 over 1 bits

AC:
	value = 24, magnitude = 5, index = 24
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 24 over 5 bits
	value = -48, magnitude = 6, index = 15
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 15 over 6 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 7 over 5 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -25, magnitude = 5, index = 6
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 6 over 5 bits
	value = 24, magnitude = 5, index = 24
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 24 over 5 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -24, magnitude = 5, index = 7
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 7 over 5 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 4 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 7 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #49] Valeurs "niveaux de gris" initiales:
00 00 6b 6e 00 00 00 00    
00 6d 6b 6d 6c 00 00 00    
71 71 72 73 72 76 00 00    
7d 00 80 7f 00 82 84 88    
93 94 94 97 96 9a 9a 9e    
00 ac 00 00 ae 00 00 00    
c6 00 cb ca 00 cd 00 00    
00 dc 00 00 de 00 e0 e3    

[MCU #49] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 6b 6e 00 00 00 00 
	00 6d 6b 6d 6c 00 00 00 
	71 71 72 73 72 76 00 00 
	7d 00 80 7f 00 82 84 88 
	93 94 94 97 96 9a 9a 9e 
	00 ac 00 00 ae 00 00 00 
	c6 00 cb ca 00 cd 00 00 
	00 dc 00 00 de 00 e0 e3 

[MCU #49] Downsampling:
[Y]:
	00 00 6b 6e 00 00 00 00 
	00 6d 6b 6d 6c 00 00 00 
	71 71 72 73 72 76 00 00 
	7d 00 80 7f 00 82 84 88 
	93 94 94 97 96 9a 9a 9e 
	00 ac 00 00 ae 00 00 00 
	c6 00 cb ca 00 cd 00 00 
	00 dc 00 00 de 00 e0 e3 

[MCU #49] DCT:
[Y]:
	fe9f 0045 ffa8 ffd9 0000 ffe8 fff6 fffe 
	ff66 004e ffa5 ffc0 0000 004b 0042 ffe4 
	ff7e fff6 ffea ffc3 0000 ffd3 ffb2 0022 
	ff98 0040 ffc4 fff7 0000 0007 0018 fff2 
	0067 ff4f 007f ffc1 0002 0023 ffc8 0023 
	ffca 0039 ffe9 0014 fffd 00cf 00e2 ffa6 
	ffa2 ffe8 0015 001f 0001 ff57 ff66 003a 
	008a 0043 ffd8 0022 ffff 0045 006a ffcf 

[MCU #49] ZZ:
[Y]:
	fe9f 0045 ff66 ff7e 004e ffa8 ffd9 ffa5 
	fff6 ff98 0067 0040 ffea ffc0 0000 ffe8 
	0000 ffc3 ffc4 ff4f ffca ffa2 0039 007f 
	fff7 0000 004b fff6 fffe 0042 ffd3 0000 
	ffc1 ffe9 ffe8 008a 0043 0015 0014 0002 
	0007 ffb2 ffe4 0022 0018 0023 fffd 001f 
	ffd8 0022 0001 00cf ffc8 fff2 0023 00e2 
	ff57 ffff 0045 ff66 ffa6 003a 006a ffcf 

[MCU #49] Quantification:
[Y]:
	ffba 0017 ffcd ffe6 000b fff9 fffe fffb 
	fffe ffe6 0019 000a fffe fffd 0000 ffff 
	0000 fff1 fff4 ffe7 fffc fffb 0002 0007 
	fffe 0000 000a ffff 0000 0002 ffff 0000 
	fff4 fffd fffe 0008 0003 0000 0000 0000 
	0001 fff9 ffff 0001 0001 0001 0000 0001 
	fffe 0001 0000 0007 ffff 0000 0000 0007 
	fff9 0000 0002 fffb fffe 0001 0003 ffff 

[MCU #49] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 5, magnitude = 3, index = 5
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits

AC:
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = -51, magnitude = 6, index = 12
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 12 over 6 bits
	value = -26, magnitude = 5, index = 5
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 5 over 5 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -26, magnitude = 5, index = 5
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 5 over 5 bits
	value = 25, magnitude = 5, index = 25
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 25 over 5 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -15, magnitude = 4, index = 0
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 0 over 4 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = -25, magnitude = 5, index = 6
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 6 over 5 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 10 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 3 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 7 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 7 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
ppm2blabla v4 (22/05/18)
[MCU #50] Valeurs "niveaux de gris" initiales:
00 00 8c 99 00 00 00 00    
00 80 8c 9a a9 00 00 00    
80 89 93 a1 b0 c1 00 00    
8d 00 a2 ad 00 cb da e5    
a4 ad b3 be ca d8 e3 ed    
00 c1 00 00 db 00 00 00    
d1 00 db e1 00 ef 00 00    
00 e8 00 00 f3 00 fa fc    

[MCU #50] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 8c 99 00 00 00 00 
	00 80 8c 9a a9 00 00 00 
	80 89 93 a1 b0 c1 00 00 
	8d 00 a2 ad 00 cb da e5 
	a4 ad b3 be ca d8 e3 ed 
	00 c1 00 00 db 00 00 00 
	d1 00 db e1 00 ef 00 00 
	00 e8 00 00 f3 00 fa fc 

[MCU #50] Downsampling:
[Y]:
	00 00 8c 99 00 00 00 00 
	00 80 8c 9a a9 00 00 00 
	80 89 93 a1 b0 c1 00 00 
	8d 00 a2 ad 00 cb da e5 
	a4 ad b3 be ca d8 e3 ed 
	00 c1 00 00 db 00 00 00 
	d1 00 db e1 00 ef 00 00 
	00 e8 00 00 f3 00 fa fc 

[MCU #50] DCT:
[Y]:
	ff54 001a ff79 ffd2 0003 ffe7 fffe fff8 
	ff81 0061 ff7b ffaf 0006 0056 004d ffde 
	ff1c 0035 ffd7 ffb5 000c ffd2 ffa5 002d 
	ff77 0052 ffc7 ffea 0007 0006 000c fffd 
	008f ff12 00b5 ffa4 fff8 0045 ffc9 001d 
	ffbf 0034 fff6 0013 ffeb 00f4 0107 ff83 
	ff89 fffd 0008 0032 0001 ff3e ff5e 0040 
	00a4 004c ffc2 0035 fff9 0041 007b ffc2 

[MCU #50] ZZ:
[Y]:
	ff54 001a ff81 ff1c 0061 ff79 ffd2 ff7b 
	0035 ff77 008f 0052 ffd7 ffaf 0003 ffe7 
	0006 ffb5 ffc7 ff12 ffbf ff89 0034 00b5 
	ffea 000c 0056 fffe fff8 004d ffd2 0007 
	ffa4 fff6 fffd 00a4 004c 0008 0013 fff8 
	0006 ffa5 ffde 002d 000c 0045 ffeb 0032 
	ffc2 0035 0001 00f4 ffc9 fffd 001d 0107 
	ff3e fff9 0041 ff5e ff83 0040 007b ffc2 

[MCU #50] Quantification:
[Y]:
	ffde 0008 ffd6 ffd3 000d fff5 fffd fff9 
	000d ffde 0023 000d fffb fffc 0000 ffff 
	0001 ffee fff5 ffde fffb fff9 0002 000a 
	fffb 0002 000c 0000 0000 0002 ffff 0000 
	ffee ffff 0000 0009 0003 0000 0000 0000 
	0000 fff8 fffe 0002 0000 0002 0000 0001 
	fffc 0002 0000 0009 ffff 0000 0000 0008 
	fff8 0000 0002 fffb fffd 0002 0003 fffe 

[MCU #50] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 36, magnitude = 6, index = 36
		bitstream => writing 14 over 4 bits
		bitstream => writing 36 over 6 bits

AC:
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -42, magnitude = 6, index = 21
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 21 over 6 bits
	value = -45, magnitude = 6, index = 18
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 18 over 6 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = -34, magnitude = 6, index = 29
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 29 over 6 bits
	value = 35, magnitude = 6, index = 35
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 35 over 6 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 13 over 5 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -34, magnitude = 6, index = 29
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 29 over 6 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 12 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -18, magnitude = 5, index = 13
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 13 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 7 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 9 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 8 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #51] Valeurs "niveaux de gris" initiales:
00 00 fa fd 00 00 00 00    
00 f3 fa fd ff 00 00 00    
ec f5 fa fe ff ff 00 00    
f0 00 fc fe 00 ff ff ff    
f4 f9 fc ff ff ff ff ff    
00 fc 00 00 ff 00 00 00    
fc 00 ff ff 00 ff 00 00    
00 ff 00 00 ff 00 ff ff    

[MCU #51] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 fa fd 00 00 00 00 
	00 f3 fa fd ff 00 00 00 
	ec f5 fa fe ff ff 00 00 
	f0 00 fc fe 00 ff ff ff 
	f4 f9 fc ff ff ff ff ff 
	00 fc 00 00 ff 00 00 00 
	fc 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #51] Downsampling:
[Y]:
	00 00 fa fd 00 00 00 00 
	00 f3 fa fd ff 00 00 00 
	ec f5 fa fe ff ff 00 00 
	f0 00 fc fe 00 ff ff ff 
	f4 f9 fc ff ff ff ff ff 
	00 fc 00 00 ff 00 00 00 
	fc 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #51] DCT:
[Y]:
	006e 00a2 ff2f ffa0 ffff fff6 000d fff4 
	fff3 009e ff2f ff6b 0002 006b 005c ffdc 
	feb9 0017 ffb5 ff82 0003 ffc7 ff95 0031 
	ff3b 0037 ffc1 ffce 0002 0005 fffe 0001 
	0081 fef0 00c9 ff98 fffd 0087 ffee 001b 
	ffa7 0024 000c 001b fffb 0149 0150 ff79 
	ff75 fffd 0011 004b fffe ff22 ff52 003b 
	00d9 0072 ffbe 0046 ffff 0042 0089 ffbf 

[MCU #51] ZZ:
[Y]:
	006e 00a2 fff3 feb9 009e ff2f ffa0 ff2f 
	0017 ff3b 0081 0037 ffb5 ff6b ffff fff6 
	0002 ff82 ffc1 fef0 ffa7 ff75 0024 00c9 
	ffce 0003 006b 000d fff4 005c ffc7 0002 
	ff98 000c fffd 00d9 0072 0011 001b fffd 
	0005 ff95 ffdc 0031 fffe 0087 fffb 004b 
	ffbe 0046 fffe 0149 ffee 0001 001b 0150 
	ff22 ffff 0042 ff52 ff79 003b 0089 ffbf 

[MCU #51] Quantification:
[Y]:
	0016 0036 fffc ffbf 0016 ffef fffa fff5 
	0005 ffcf 0020 0009 fff7 fff8 0000 0000 
	0000 ffe1 fff4 ffda fff9 fff8 0001 000b 
	fff4 0000 000f 0001 0000 0003 fffe 0000 
	ffec 0001 0000 000c 0005 0000 0000 0000 
	0000 fff7 fffe 0002 0000 0004 0000 0002 
	fffc 0003 0000 000c 0000 0000 0000 000b 
	fff6 0000 0002 fffa fffd 0001 0004 fffe 

[MCU #51] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 56, magnitude = 6, index = 56
		bitstream => writing 14 over 4 bits
		bitstream => writing 56 over 6 bits

AC:
	value = 54, magnitude = 6, index = 54
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 54 over 6 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -65, magnitude = 7, index = 62
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 62 over 7 bits
	value = 22, magnitude = 5, index = 22
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 22 over 5 bits
	value = -17, magnitude = 5, index = 14
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 14 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -49, magnitude = 6, index = 14
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 14 over 6 bits
	value = 32, magnitude = 6, index = 32
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 32 over 6 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -31, magnitude = 5, index = 0
	RLE code = 53, huffman path = 65424, nbits = 16
		bitstream => writing 65424 over 16 bits
		bitstream => writing 0 over 5 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = -38, magnitude = 6, index = 25
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 25 over 6 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 11 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 6 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #52] Valeurs "niveaux de gris" initiales:
00 00 ff ff 00 00 00 00    
00 ff ff ff ff 00 00 00    
ff ff ff ff ff ff 00 00    
ff 00 ff ff 00 ff ff ff    
ff ff ff ff ff ff ff ff    
00 ff 00 00 ff 00 00 00    
ff 00 ff ff 00 ff 00 00    
00 ff 00 00 ff 00 ff ff    

[MCU #52] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #52] Downsampling:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #52] DCT:
[Y]:
	007b 00b2 ff36 ffa2 0000 fff7 000e fff5 
	fffa 00a5 ff30 ff69 0000 006b 005c ffdc 
	feb2 000f ffad ff7c 0000 ffc5 ff93 0030 
	ff36 0030 ffbc ffca 0000 0004 fffd 0001 
	007f feee 00c9 ff99 0000 008b fff1 001d 
	ffa6 0023 000d 001e 0000 014e 0154 ff7c 
	ff76 fffe 0012 004c 0000 ff23 ff53 003b 
	00dc 0076 ffc2 0048 0000 0043 008a ffbf 

[MCU #52] ZZ:
[Y]:
	007b 00b2 fffa feb2 00a5 ff36 ffa2 ff30 
	000f ff36 007f 0030 ffad ff69 0000 fff7 
	0000 ff7c ffbc feee ffa6 ff76 0023 00c9 
	ffca 0000 006b 000e fff5 005c ffc5 0000 
	ff99 000d fffe 00dc 0076 0012 001e 0000 
	0004 ff93 ffdc 0030 fffd 008b 0000 004c 
	ffc2 0048 0000 014e fff1 0001 001d 0154 
	ff23 0000 0043 ff53 ff7c 003b 008a ffbf 

[MCU #52] Quantification:
[Y]:
	0018 003b fffe ffbe 0017 fff0 fffa fff5 
	0003 ffce 001f 0008 fff6 fff8 0000 0000 
	0000 ffdf fff3 ffd9 fff9 fff8 0001 000b 
	fff3 0000 000f 0001 0000 0003 fffe 0000 
	ffec 0001 0000 000c 0005 0000 0000 0000 
	0000 fff7 fffe 0002 0000 0004 0000 0002 
	fffc 0003 0000 000c 0000 0000 0000 000b 
	fff6 0000 0002 fffb fffd 0001 0004 fffe 

[MCU #52] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 2, magnitude = 2, index = 2
		bitstream => writing 3 over 3 bits
		bitstream => writing 2 over 2 bits

AC:
	value = 59, magnitude = 6, index = 59
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 59 over 6 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -33, magnitude = 6, index = 30
	RLE code = 54, huffman path = 65425, nbits = 16
		bitstream => writing 65425 over 16 bits
		bitstream => writing 30 over 6 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = -39, magnitude = 6, index = 24
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 24 over 6 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 11 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 6 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #53] Valeurs "niveaux de gris" initiales:
00 00 ff ff 00 00 00 00    
00 ff ff ff ff 00 00 00    
ff ff ff ff ff ff 00 00    
ff 00 ff ff 00 ff ff ff    
ff ff ff ff ff ff ff ff    
00 ff 00 00 ff 00 00 00    
ff 00 ff ff 00 ff 00 00    
00 ff 00 00 ff 00 ff ff    

[MCU #53] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #53] Downsampling:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #53] DCT:
[Y]:
	007b 00b2 ff36 ffa2 0000 fff7 000e fff5 
	fffa 00a5 ff30 ff69 0000 006b 005c ffdc 
	feb2 000f ffad ff7c 0000 ffc5 ff93 0030 
	ff36 0030 ffbc ffca 0000 0004 fffd 0001 
	007f feee 00c9 ff99 0000 008b fff1 001d 
	ffa6 0023 000d 001e 0000 014e 0154 ff7c 
	ff76 fffe 0012 004c 0000 ff23 ff53 003b 
	00dc 0076 ffc2 0048 0000 0043 008a ffbf 

[MCU #53] ZZ:
[Y]:
	007b 00b2 fffa feb2 00a5 ff36 ffa2 ff30 
	000f ff36 007f 0030 ffad ff69 0000 fff7 
	0000 ff7c ffbc feee ffa6 ff76 0023 00c9 
	ffca 0000 006b 000e fff5 005c ffc5 0000 
	ff99 000d fffe 00dc 0076 0012 001e 0000 
	0004 ff93 ffdc 0030 fffd 008b 0000 004c 
	ffc2 0048 0000 014e fff1 0001 001d 0154 
	ff23 0000 0043 ff53 ff7c 003b 008a ffbf 

[MCU #53] Quantification:
[Y]:
	0018 003b fffe ffbe 0017 fff0 fffa fff5 
	0003 ffce 001f 0008 fff6 fff8 0000 0000 
	0000 ffdf fff3 ffd9 fff9 fff8 0001 000b 
	fff3 0000 000f 0001 0000 0003 fffe 0000 
	ffec 0001 0000 000c 0005 0000 0000 0000 
	0000 fff7 fffe 0002 0000 0004 0000 0002 
	fffc 0003 0000 000c 0000 0000 0000 000b 
	fff6 0000 0002 fffb fffd 0001 0004 fffe 

[MCU #53] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = 59, magnitude = 6, index = 59
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 59 over 6 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -33, magnitude = 6, index = 30
	RLE code = 54, huffman path = 65425, nbits = 16
		bitstream => writing 65425 over 16 bits
		bitstream => writing 30 over 6 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = -39, magnitude = 6, index = 24
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 24 over 6 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 11 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 6 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #54] Valeurs "niveaux de gris" initiales:
00 00 ff ff 00 00 00 00    
00 ff ff ff ff 00 00 00    
ff ff ff ff ff ff 00 00    
ff 00 ff ff 00 ff ff ff    
ff ff ff ff ff ff ff ff    
00 ff 00 00 ff 00 00 00    
ff 00 ff ff 00 ff 00 00    
00 ff 00 00 ff 00 ff ff    

[MCU #54] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #54] Downsampling:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #54] DCT:
[Y]:
	007b 00b2 ff36 ffa2 0000 fff7 000e fff5 
	fffa 00a5 ff30 ff69 0000 006b 005c ffdc 
	feb2 000f ffad ff7c 0000 ffc5 ff93 0030 
	ff36 0030 ffbc ffca 0000 0004 fffd 0001 
	007f feee 00c9 ff99 0000 008b fff1 001d 
	ffa6 0023 000d 001e 0000 014e 0154 ff7c 
	ff76 fffe 0012 004c 0000 ff23 ff53 003b 
	00dc 0076 ffc2 0048 0000 0043 008a ffbf 

[MCU #54] ZZ:
[Y]:
	007b 00b2 fffa feb2 00a5 ff36 ffa2 ff30 
	000f ff36 007f 0030 ffad ff69 0000 fff7 
	0000 ff7c ffbc feee ffa6 ff76 0023 00c9 
	ffca 0000 006b 000e fff5 005c ffc5 0000 
	ff99 000d fffe 00dc 0076 0012 001e 0000 
	0004 ff93 ffdc 0030 fffd 008b 0000 004c 
	ffc2 0048 0000 014e fff1 0001 001d 0154 
	ff23 0000 0043 ff53 ff7c 003b 008a ffbf 

[MCU #54] Quantification:
[Y]:
	0018 003b fffe ffbe 0017 fff0 fffa fff5 
	0003 ffce 001f 0008 fff6 fff8 0000 0000 
	0000 ffdf fff3 ffd9 fff9 fff8 0001 000b 
	fff3 0000 000f 0001 0000 0003 fffe 0000 
	ffec 0001 0000 000c 0005 0000 0000 0000 
	0000 fff7 fffe 0002 0000 0004 0000 0002 
	fffc 0003 0000 000c 0000 0000 0000 000b 
	fff6 0000 0002 fffb fffd 0001 0004 fffe 

[MCU #54] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = 59, magnitude = 6, index = 59
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 59 over 6 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -33, magnitude = 6, index = 30
	RLE code = 54, huffman path = 65425, nbits = 16
		bitstream => writing 65425 over 16 bits
		bitstream => writing 30 over 6 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = -39, magnitude = 6, index = 24
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 24 over 6 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 11 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 6 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #55] Valeurs "niveaux de gris" initiales:
00 00 ff ff 00 00 00 00    
00 ff ff ff ff 00 00 00    
ff ff ff ff ff ff 00 00    
ff 00 ff ff 00 ff ff ff    
ff ff ff ff ff ff ff ff    
00 ff 00 00 ff 00 00 00    
ff 00 ff ff 00 ff 00 00    
00 ff 00 00 ff 00 ff ff    

[MCU #55] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #55] Downsampling:
[Y]:
	00 00 ff ff 00 00 00 00 
	00 ff ff ff ff 00 00 00 
	ff ff ff ff ff ff 00 00 
	ff 00 ff ff 00 ff ff ff 
	ff ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #55] DCT:
[Y]:
	007b 00b2 ff36 ffa2 0000 fff7 000e fff5 
	fffa 00a5 ff30 ff69 0000 006b 005c ffdc 
	feb2 000f ffad ff7c 0000 ffc5 ff93 0030 
	ff36 0030 ffbc ffca 0000 0004 fffd 0001 
	007f feee 00c9 ff99 0000 008b fff1 001d 
	ffa6 0023 000d 001e 0000 014e 0154 ff7c 
	ff76 fffe 0012 004c 0000 ff23 ff53 003b 
	00dc 0076 ffc2 0048 0000 0043 008a ffbf 

[MCU #55] ZZ:
[Y]:
	007b 00b2 fffa feb2 00a5 ff36 ffa2 ff30 
	000f ff36 007f 0030 ffad ff69 0000 fff7 
	0000 ff7c ffbc feee ffa6 ff76 0023 00c9 
	ffca 0000 006b 000e fff5 005c ffc5 0000 
	ff99 000d fffe 00dc 0076 0012 001e 0000 
	0004 ff93 ffdc 0030 fffd 008b 0000 004c 
	ffc2 0048 0000 014e fff1 0001 001d 0154 
	ff23 0000 0043 ff53 ff7c 003b 008a ffbf 

[MCU #55] Quantification:
[Y]:
	0018 003b fffe ffbe 0017 fff0 fffa fff5 
	0003 ffce 001f 0008 fff6 fff8 0000 0000 
	0000 ffdf fff3 ffd9 fff9 fff8 0001 000b 
	fff3 0000 000f 0001 0000 0003 fffe 0000 
	ffec 0001 0000 000c 0005 0000 0000 0000 
	0000 fff7 fffe 0002 0000 0004 0000 0002 
	fffc 0003 0000 000c 0000 0000 0000 000b 
	fff6 0000 0002 fffb fffd 0001 0004 fffe 

[MCU #55] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = 59, magnitude = 6, index = 59
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 59 over 6 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -66, magnitude = 7, index = 61
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 61 over 7 bits
	value = 23, magnitude = 5, index = 23
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 23 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 13 over 6 bits
	value = 31, magnitude = 5, index = 31
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 31 over 5 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -33, magnitude = 6, index = 30
	RLE code = 54, huffman path = 65425, nbits = 16
		bitstream => writing 65425 over 16 bits
		bitstream => writing 30 over 6 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = -39, magnitude = 6, index = 24
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 24 over 6 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 11 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 6 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #56] Valeurs "niveaux de gris" initiales:
00 00 ed d6 00 00 00 00    
00 fb eb d1 af 00 00 00    
ff fc ec d0 ab 86 00 00    
ff 00 ec d1 00 81 59 39    
ff fc ec ce a8 7d 54 34    
00 fb 00 00 a6 00 00 00    
ff 00 ec cd 00 79 00 00    
00 fb 00 00 a5 00 4e 2e    

[MCU #56] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 ed d6 00 00 00 00 
	00 fb eb d1 af 00 00 00 
	ff fc ec d0 ab 86 00 00 
	ff 00 ec d1 00 81 59 39 
	ff fc ec ce a8 7d 54 34 
	00 fb 00 00 a6 00 00 00 
	ff 00 ec cd 00 79 00 00 
	00 fb 00 00 a5 00 4e 2e 

[MCU #56] Downsampling:
[Y]:
	00 00 ed d6 00 00 00 00 
	00 fb eb d1 af 00 00 00 
	ff fc ec d0 ab 86 00 00 
	ff 00 ec d1 00 81 59 39 
	ff fc ec ce a8 7d 54 34 
	00 fb 00 00 a6 00 00 00 
	ff 00 ec cd 00 79 00 00 
	00 fb 00 00 a5 00 4e 2e 

[MCU #56] DCT:
[Y]:
	ff46 0190 ff4d ff97 ffeb 0001 0005 fffa 
	003c 003f ff74 ff67 fffe 0060 004d fff4 
	ff22 ffa6 ffbe ff94 ffe5 ffc5 ffb3 000e 
	ff87 ffdb ffde ffc7 fffc 0005 fffd 0001 
	fffe ffa2 0035 ffe7 fffd 0063 0016 000c 
	ffcf fffa 001c 0008 003c 012a 010f ffd9 
	ffa1 ffda 0021 003f ffe6 ff45 ff6e 000a 
	00b8 007c fff0 0020 0017 0046 0060 ffeb 

[MCU #56] ZZ:
[Y]:
	ff46 0190 003c ff22 003f ff4d ff97 ff74 
	ffa6 ff87 fffe ffdb ffbe ff67 ffeb 0001 
	fffe ff94 ffde ffa2 ffcf ffa1 fffa 0035 
	ffc7 ffe5 0060 0005 fffa 004d ffc5 fffc 
	ffe7 001c ffda 00b8 007c 0021 0008 fffd 
	0005 ffb3 fff4 000e fffd 0063 003c 003f 
	fff0 0020 ffe6 012a 0016 0001 000c 010f 
	ff45 0017 0046 ff6e ffd9 000a 0060 ffeb 

[MCU #56] Quantification:
[Y]:
	ffdb 0085 0014 ffd4 0009 fff2 fff9 fff9 
	ffea ffe2 0000 fffa fff8 fff7 ffff 0000 
	0000 ffe5 fffa fff3 fffc fffb 0000 0003 
	fff2 fffb 000d 0000 0000 0002 fffe 0000 
	fffb 0004 fffd 000a 0006 0001 0000 0000 
	0000 fff9 0000 0000 0000 0003 0001 0002 
	ffff 0001 ffff 000b 0000 0000 0000 0009 
	fff8 0000 0002 fffb ffff 0000 0003 0000 

[MCU #56] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -61, magnitude = 6, index = 2
		bitstream => writing 14 over 4 bits
		bitstream => writing 2 over 6 bits

AC:
	value = 133, magnitude = 8, index = 133
	RLE code = 8, huffman path = 1014, nbits = 10
		bitstream => writing 1014 over 10 bits
		bitstream => writing 133 over 8 bits
	value = 20, magnitude = 5, index = 20
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 20 over 5 bits
	value = -44, magnitude = 6, index = 19
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 19 over 6 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -22, magnitude = 5, index = 9
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 9 over 5 bits
	value = -30, magnitude = 5, index = 1
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -27, magnitude = 5, index = 4
	RLE code = 37, huffman path = 65417, nbits = 16
		bitstream => writing 65417 over 16 bits
		bitstream => writing 4 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -13, magnitude = 4, index = 2
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 2 over 4 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -14, magnitude = 4, index = 1
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 4 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 13, magnitude = 4, index = 13
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 13 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 10, magnitude = 4, index = 10
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 10 over 4 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 51, huffman path = 4085, nbits = 12
		bitstream => writing 4085 over 12 bits
		bitstream => writing 0 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 50, huffman path = 503, nbits = 9
		bitstream => writing 503 over 9 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 9 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #57] Valeurs "niveaux de gris" initiales:
00 00 19 12 00 00 00 00    
00 1c 13 10 0e 00 00 00    
24 18 11 0c 0d 0f 00 00    
21 00 0e 0d 00 0d 11 1b    
1f 14 0d 0b 0a 0e 12 1e    
00 12 00 00 09 00 00 00    
1d 00 0c 0a 00 0f 00 00    
00 11 00 00 0b 00 14 23    

[MCU #57] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 19 12 00 00 00 00 
	00 1c 13 10 0e 00 00 00 
	24 18 11 0c 0d 0f 00 00 
	21 00 0e 0d 00 0d 11 1b 
	1f 14 0d 0b 0a 0e 12 1e 
	00 12 00 00 09 00 00 00 
	1d 00 0c 0a 00 0f 00 00 
	00 11 00 00 0b 00 14 23 

[MCU #57] Downsampling:
[Y]:
	00 00 19 12 00 00 00 00 
	00 1c 13 10 0e 00 00 00 
	24 18 11 0c 0d 0f 00 00 
	21 00 0e 0d 00 0d 11 1b 
	1f 14 0d 0b 0a 0e 12 1e 
	00 12 00 00 09 00 00 00 
	1d 00 0c 0a 00 0f 00 00 
	00 11 00 00 0b 00 14 23 

[MCU #57] DCT:
[Y]:
	fc54 0013 000e fff9 0004 ffff 0004 fffe 
	0002 0014 ffeb fff6 fffa 0006 0004 0000 
	ffe9 fffb ffed ffef fff8 fffa fff8 0002 
	ffed 0002 fff2 fffa fffb 0002 0000 ffff 
	000c ffe4 0012 fff2 0007 0009 0003 0003 
	fff8 0007 ffff 000a 0005 0019 0018 fffe 
	fff6 ffff fffe 0001 fffd fff5 fff7 0002 
	0010 000c 0003 000a 0002 0005 000a fffe 

[MCU #57] ZZ:
[Y]:
	fc54 0013 0002 ffe9 0014 000e fff9 ffeb 
	fffb ffed 000c 0002 ffed fff6 0004 ffff 
	fffa ffef fff2 ffe4 fff8 fff6 0007 0012 
	fffa fff8 0006 0004 fffe 0004 fffa fffb 
	fff2 ffff ffff 0010 000c fffe 000a 0007 
	0002 fff8 0000 0002 0000 0009 0005 0001 
	0003 000a fffd 0019 0003 ffff 0003 0018 
	fff5 0002 0005 fff7 fffe 0002 000a fffe 

[MCU #57] Quantification:
[Y]:
	ff44 0006 0000 fffc 0002 0001 0000 ffff 
	ffff fffc 0003 0000 fffe 0000 0000 0000 
	ffff fffc fffe fffc 0000 0000 0000 0001 
	ffff ffff 0000 0000 0000 0000 0000 0000 
	fffe 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[MCU #57] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -151, magnitude = 8, index = 104
		bitstream => writing 62 over 6 bits
		bitstream => writing 104 over 8 bits

AC:
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 49, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 98, huffman path = 4086, nbits = 12
		bitstream => writing 4086 over 12 bits
		bitstream => writing 1 over 2 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
ppm2blabla v4 (22/05/18)
[MCU #58] Valeurs "niveaux de gris" initiales:
00 00 50 6d 00 00 00 00    
00 3a 56 7a 96 00 00 00    
27 3f 5f 7e a5 c6 00 00    
2a 00 69 8d 00 d0 e8 f6    
2b 4a 6f 92 ba d8 ed fb    
00 4f 00 00 c6 00 00 00    
35 00 7e a5 00 e7 00 00    
00 61 00 00 d4 00 fb ff    

[MCU #58] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 50 6d 00 00 00 00 
	00 3a 56 7a 96 00 00 00 
	27 3f 5f 7e a5 c6 00 00 
	2a 00 69 8d 00 d0 e8 f6 
	2b 4a 6f 92 ba d8 ed fb 
	00 4f 00 00 c6 00 00 00 
	35 00 7e a5 00 e7 00 00 
	00 61 00 00 d4 00 fb ff 

[MCU #58] Downsampling:
[Y]:
	00 00 50 6d 00 00 00 00 
	00 3a 56 7a 96 00 00 00 
	27 3f 5f 7e a5 c6 00 00 
	2a 00 69 8d 00 d0 e8 f6 
	2b 4a 6f 92 ba d8 ed fb 
	00 4f 00 00 c6 00 00 00 
	35 00 7e a5 00 e7 00 00 
	00 61 00 00 d4 00 fb ff 

[MCU #58] DCT:
[Y]:
	fe89 ff4d ff66 ffec 000c ffec 0006 fffb 
	ff9a 0083 ffa0 ffd4 0005 0037 0032 ffd3 
	ff38 0073 fff8 ffd3 0026 ffeb ffb9 0036 
	ff7f 0064 ffd6 fff7 000c ffff 0004 0000 
	00a1 ff11 00bf ffa1 fff8 0045 ffc7 001d 
	ffc1 002f fff1 0007 ffb4 008e 00b0 ff66 
	ffa8 001e 0004 0034 0023 ff86 ffa1 0059 
	0068 0012 ffad 002e ffdf 0013 005a ffba 

[MCU #58] ZZ:
[Y]:
	fe89 ff4d ff9a ff38 0083 ff66 ffec ffa0 
	0073 ff7f 00a1 0064 fff8 ffd4 000c ffec 
	0005 ffd3 ffd6 ff11 ffc1 ffa8 002f 00bf 
	fff7 0026 0037 0006 fffb 0032 ffeb 000c 
	ffa1 fff1 001e 0068 0012 0004 0007 fff8 
	ffff ffb9 ffd3 0036 0004 0045 ffb4 0034 
	ffad 002e 0023 008e ffc7 0000 001d 00b0 
	ff86 ffdf 0013 ffa1 ff66 0059 005a ffba 

[MCU #58] Quantification:
[Y]:
	ffb5 ffc5 ffde ffd8 0012 fff4 ffff fffb 
	001c ffe0 0028 0010 ffff fffe 0000 ffff 
	0001 fff5 fff8 ffde fffb fffb 0002 000b 
	fffe 0007 0007 0000 0000 0001 0000 0000 
	ffed fffe 0002 0006 0000 0000 0000 0000 
	0000 fffa fffe 0002 0000 0002 fffe 0001 
	fffb 0002 0001 0005 ffff 0000 0000 0005 
	fffb ffff 0000 fffd fffc 0002 0002 fffe 

[MCU #58] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 113, magnitude = 7, index = 113
		bitstream => writing 30 over 5 bits
		bitstream => writing 113 over 7 bits

AC:
	value = -59, magnitude = 6, index = 4
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 4 over 6 bits
	value = -34, magnitude = 6, index = 29
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 29 over 6 bits
	value = -40, magnitude = 6, index = 23
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 23 over 6 bits
	value = 18, magnitude = 5, index = 18
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 18 over 5 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 28, magnitude = 5, index = 28
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 28 over 5 bits
	value = -32, magnitude = 6, index = 31
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 31 over 6 bits
	value = 40, magnitude = 6, index = 40
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 40 over 6 bits
	value = 16, magnitude = 5, index = 16
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 16 over 5 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -34, magnitude = 6, index = 29
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 29 over 6 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 37, huffman path = 65417, nbits = 16
		bitstream => writing 65417 over 16 bits
		bitstream => writing 12 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 83, huffman path = 65438, nbits = 16
		bitstream => writing 65438 over 16 bits
		bitstream => writing 1 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 5 over 3 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 3 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
ppm2blabla v4 (22/05/18)
[MCU #59] Valeurs "niveaux de gris" initiales:
00 00 f7 fb 00 00 00 00    
00 f6 fa fc ff 00 00 00    
f6 fa fd ff ff ff 00 00    
fb 00 ff ff 00 ff ff ff    
fe ff ff ff ff ff ff ff    
00 ff 00 00 ff 00 00 00    
ff 00 ff ff 00 ff 00 00    
00 ff 00 00 ff 00 ff ff    

[MCU #59] Conversion "niveaux de gris" -> YCbCr:
[Y]:
	00 00 f7 fb 00 00 00 00 
	00 f6 fa fc ff 00 00 00 
	f6 fa fd ff ff ff 00 00 
	fb 00 ff ff 00 ff ff ff 
	fe ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #59] Downsampling:
[Y]:
	00 00 f7 fb 00 00 00 00 
	00 f6 fa fc ff 00 00 00 
	f6 fa fd ff ff ff 00 00 
	fb 00 ff ff 00 ff ff ff 
	fe ff ff ff ff ff ff ff 
	00 ff 00 00 ff 00 00 00 
	ff 00 ff ff 00 ff 00 00 
	00 ff 00 00 ff 00 ff ff 

[MCU #59] DCT:
[Y]:
	0075 00ab ff35 ffa4 0001 fff7 000d fff5 
	fff3 009f ff31 ff6d 0002 006b 005c ffdc 
	feb1 000f ffb1 ff80 0002 ffc5 ff92 0030 
	ff38 0033 ffc0 ffcd 0000 0003 fffc 0000 
	0081 fef0 00ca ff9a fffe 0089 ffef 001c 
	ffa6 0024 000d 001d fffe 014c 0152 ff7a 
	ff75 fffd 0011 004a fffe ff22 ff51 003a 
	00dc 0075 ffc1 0047 ffff 0042 0089 ffbf 

[MCU #59] ZZ:
[Y]:
	0075 00ab fff3 feb1 009f ff35 ffa4 ff31 
	000f ff38 0081 0033 ffb1 ff6d 0001 fff7 
	0002 ff80 ffc0 fef0 ffa6 ff75 0024 00ca 
	ffcd 0002 006b 000d fff5 005c ffc5 0000 
	ff9a 000d fffd 00dc 0075 0011 001d fffe 
	0003 ff92 ffdc 0030 fffc 0089 fffe 004a 
	ffc1 0047 fffe 014c ffef 0000 001c 0152 
	ff22 ffff 0042 ff51 ff7a 003a 0089 ffbf 

[MCU #59] Quantification:
[Y]:
	0017 0039 fffc ffbd 0016 fff0 fffa fff5 
	0003 ffce 0020 0008 fff7 fff8 0000 0000 
	0000 ffe0 fff4 ffda fff9 fff8 0001 000b 
	fff4 0000 000f 0001 0000 0003 fffe 0000 
	ffec 0001 0000 000c 0005 0000 0000 0000 
	0000 fff6 fffe 0002 0000 0004 0000 0002 
	fffc 0003 0000 000c 0000 0000 0000 000b 
	fff6 0000 0002 fffa fffd 0001 0004 fffe 

[MCU #59] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = 98, magnitude = 7, index = 98
		bitstream => writing 30 over 5 bits
		bitstream => writing 98 over 7 bits

AC:
	value = 57, magnitude = 6, index = 57
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 57 over 6 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = -67, magnitude = 7, index = 60
	RLE code = 7, huffman path = 248, nbits = 8
		bitstream => writing 248 over 8 bits
		bitstream => writing 60 over 7 bits
	value = 22, magnitude = 5, index = 22
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 22 over 5 bits
	value = -16, magnitude = 5, index = 15
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 15 over 5 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -11, magnitude = 4, index = 4
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 4 over 4 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -50, magnitude = 6, index = 13
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 13 over 6 bits
	value = 32, magnitude = 6, index = 32
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 32 over 6 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 8 over 4 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = -32, magnitude = 6, index = 31
	RLE code = 54, huffman path = 65425, nbits = 16
		bitstream => writing 65425 over 16 bits
		bitstream => writing 31 over 6 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = -38, magnitude = 6, index = 25
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 25 over 6 bits
	value = -7, magnitude = 3, index = 0
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 0 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 7 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -12, magnitude = 4, index = 3
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 3 over 4 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 15 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 3 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = -20, magnitude = 5, index = 11
	RLE code = 21, huffman path = 2038, nbits = 11
		bitstream => writing 2038 over 11 bits
		bitstream => writing 11 over 5 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 68, huffman path = 65431, nbits = 16
		bitstream => writing 65431 over 16 bits
		bitstream => writing 5 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 4 over 3 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 12, magnitude = 4, index = 12
	RLE code = 20, huffman path = 502, nbits = 9
		bitstream => writing 502 over 9 bits
		bitstream => writing 12 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 52, huffman path = 65423, nbits = 16
		bitstream => writing 65423 over 16 bits
		bitstream => writing 11 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 4 over 3 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
