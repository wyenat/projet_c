ppm_check_header:
	 presence de P5 ou P6 dans l'entete... PASS
	 presence des dimensions HxV dans l'entete... 8x8
	 presence de 255 dans l'entete... PASS

ppm2blabla v4 (22/05/18)
[MCU #0] Valeurs RGB initiales:
ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6    ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6    
ff00f6 0000ff 0000ff 0000ff 0000ff 0000ff 0000ff ff00f6    ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6    
ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 0000ff ff00f6    ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6 ff00f6    
ff0000 ff0000 ff0000 ff0000 ff0000 ff0000 ffff00 ff0000    ff0000 ff0000 ff0000 ff0000 ff0000 ff0000 ff0000 ff0000    
00ff00 00ff00 00ff00 00ff00 00ff00 00ff00 ffff00 00ff00    00ff00 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00 00ff00    
00ffea 00ffea 00ffea 00ffea 00ffea 00ffea 0000ff 00ffea    00ffea 00ffea 00ffea 00ffea 00ffea 00ffea 00ffea 00ffea    
00ffea 0000ff 0000ff 0000ff 0000ff 0000ff 0000ff 00ffea    00ffea 00ffea 00ffea 00ffea 00ffea 00ffea 00ffea 00ffea    
00ffea 00ffea 00ffea 00ffea 00ffea 00ffea 00ffea 00ff0a    00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    

00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    
00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a 00ff0a    

[MCU #0] Conversion RGB -> YCbCr:
[Y]:
	68 68 68 68 68 68 68 68    68 68 68 68 68 68 68 68 
	68 1d 1d 1d 1d 1d 1d 68    68 68 68 68 68 68 68 68 
	68 68 68 68 68 68 1d 68    68 68 68 68 68 68 68 68 
	4c 4c 4c 4c 4c 4c e2 4c    4c 4c 4c 4c 4c 4c 4c 4c 
	96 96 96 96 96 96 e2 96    96 96 96 96 96 96 96 96 
	b0 b0 b0 b0 b0 b0 1d b0    b0 b0 b0 b0 b0 b0 b0 b0 
	b0 1d 1d 1d 1d 1d 1d b0    b0 b0 b0 b0 b0 b0 b0 b0 
	b0 b0 b0 b0 b0 b0 b0 97    97 97 97 97 97 97 97 97 

	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 

[Cb]:
	d0 d0 d0 d0 d0 d0 d0 d0    d0 d0 d0 d0 d0 d0 d0 d0 
	d0 ff ff ff ff ff ff d0    d0 d0 d0 d0 d0 d0 d0 d0 
	d0 d0 d0 d0 d0 d0 ff d0    d0 d0 d0 d0 d0 d0 d0 d0 
	55 55 55 55 55 55 00 55    55 55 55 55 55 55 55 55 
	2c 2c 2c 2c 2c 2c 00 2c    2c 2c 2c 2c 2c 2c 2c 2c 
	a1 a1 a1 a1 a1 a1 ff a1    a1 a1 a1 a1 a1 a1 a1 a1 
	a1 ff ff ff ff ff ff a1    a1 a1 a1 a1 a1 a1 a1 a1 
	a1 a1 a1 a1 a1 a1 a1 31    31 31 31 31 31 31 31 31 

	31 31 31 31 31 31 31 31    31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31    31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31    31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31    31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31    31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31    31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31    31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31    31 31 31 31 31 31 31 31 

[Cr]:
	ec ec ec ec ec ec ec ec    ec ec ec ec ec ec ec ec 
	ec 6b 6b 6b 6b 6b 6b ec    ec ec ec ec ec ec ec ec 
	ec ec ec ec ec ec 6b ec    ec ec ec ec ec ec ec ec 
	ff ff ff ff ff ff 95 ff    ff ff ff ff ff ff ff ff 
	15 15 15 15 15 15 95 15    15 15 15 15 15 15 15 15 
	02 02 02 02 02 02 6b 02    02 02 02 02 02 02 02 02 
	02 6b 6b 6b 6b 6b 6b 02    02 02 02 02 02 02 02 02 
	02 02 02 02 02 02 02 14    14 14 14 14 14 14 14 14 

	14 14 14 14 14 14 14 14    14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14    14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14    14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14    14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14    14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14    14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14    14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14    14 14 14 14 14 14 14 14 

[MCU #0] Downsampling:
[Y]:
	68 68 68 68 68 68 68 68    68 68 68 68 68 68 68 68 
	68 1d 1d 1d 1d 1d 1d 68    68 68 68 68 68 68 68 68 
	68 68 68 68 68 68 1d 68    68 68 68 68 68 68 68 68 
	4c 4c 4c 4c 4c 4c e2 4c    4c 4c 4c 4c 4c 4c 4c 4c 
	96 96 96 96 96 96 e2 96    96 96 96 96 96 96 96 96 
	b0 b0 b0 b0 b0 b0 1d b0    b0 b0 b0 b0 b0 b0 b0 b0 
	b0 1d 1d 1d 1d 1d 1d b0    b0 b0 b0 b0 b0 b0 b0 b0 
	b0 b0 b0 b0 b0 b0 b0 97    97 97 97 97 97 97 97 97 

	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 
	97 97 97 97 97 97 97 97    97 97 97 97 97 97 97 97 

[Cb]:
	db e7 e7 db d0 d0 d0 d0 
	92 92 92 89 92 92 92 92 
	66 66 66 73 66 66 66 66 
	b8 d0 d0 9c 69 69 69 69 
	31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31 
	31 31 31 31 31 31 31 31 

[Cr]:
	cb ab ab cb ec ec ec ec 
	f5 f5 f5 ba f5 f5 f5 f5 
	0b 0b 0b 45 0b 0b 0b 0b 
	1c 36 36 20 0b 0b 0b 0b 
	14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14 
	14 14 14 14 14 14 14 14 

[MCU #0] DCT:
[Y]:
	ff80 0003 0044 0003 0033 0003 001b 0001    0011 0000 0000 0000 0000 0000 0000 0000 
	ff48 ffee ffef fffd ffe5 000a ffea 0006    ff1d 0000 0000 0000 0000 0000 0000 0000 
	ffd2 001f 0016 fffe 002f ffe4 002a ffef    0025 0000 0000 0000 0000 0000 0000 0000 
	003e 0012 0000 fff6 001c ffe1 001e ffef    007a 0000 0000 0000 0000 0000 0000 0000 
	00a5 ffc2 ffd1 0013 ff8d 0050 ff97 002c    ffb1 0000 0000 0000 0000 0000 0000 0000 
	ff85 ffec 002b 0000 000e 0010 fffd 0009    ffd4 0000 0000 0000 0000 0000 0000 0000 
	00c1 003f ff83 fff3 ffe9 ffb9 001b ffd8    000f 0000 0000 0000 0000 0000 0000 0000 
	000a 0001 0012 fffe 0011 fffc 000b fffe    003d 0000 0000 0000 0000 0000 0000 0000 

	00b8 0000 0000 0000 0000 0000 0000 0000    00b8 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	ff28 0030 0003 ffec fff4 0001 0001 fffd 
	019f 0016 0001 fff6 fff9 ffff 0000 ffff 
	0071 ffd4 fffc 000f 0007 fffc fffe 0003 
	0011 ffe8 ffff 0008 0002 fffc ffff 0003 
	0073 0030 0005 ffed fff3 ffff 0002 ffff 
	0080 0036 0002 ffe9 fff4 0003 0001 fffb 
	ffef ffef fff8 0002 0007 0003 fffd fffb 
	ff9b ffca fff6 0011 000f 0001 fffb fffd 

[Cr]:
	fe3d fff7 ffff 0003 0001 ffff ffff 0000 
	0209 ffe3 0003 0010 0006 fffd 0001 0005 
	0168 ffcd 000b 0020 000a fff9 0004 000e 
	00a2 ffd7 000b 001b 0006 fff8 0004 000d 
	ffee fff7 ffff 0003 0002 ffff ffff 0000 
	ff6f 0002 ffef fff5 000b 000d fff9 ffef 
	ff45 fff1 ffe7 fffc 001a 0017 fff5 ffe6 
	ff7e ffea ffee 0003 0018 0012 fff8 ffed 

[MCU #0] ZZ:
[Y]:
	ff80 0003 ff48 ffd2 ffee 0044 0003 ffef    0011 0000 ff1d 0025 0000 0000 0000 0000 
	001f 003e 00a5 0012 0016 fffd 0033 0003    0000 007a ffb1 0000 0000 0000 0000 0000 
	ffe5 fffe 0000 ffc2 ff85 00c1 ffec ffd1    0000 0000 0000 0000 ffd4 000f 0000 0000 
	fff6 002f 000a 001b 0001 ffea ffe4 001c    0000 0000 0000 0000 0000 0000 0000 0000 
	0013 002b 003f 000a 0001 ff83 0000 ff8d    0000 0000 0000 003d 0000 0000 0000 0000 
	ffe1 002a 0006 ffef 001e 0050 000e fff3    0000 0000 0000 0000 0000 0000 0000 0000 
	0012 fffe ffe9 0010 ff97 ffef 002c fffd    0000 0000 0000 0000 0000 0000 0000 0000 
	ffb9 0011 fffc 001b 0009 ffd8 000b fffe    0000 0000 0000 0000 0000 0000 0000 0000 

	00b8 0000 0000 0000 0000 0000 0000 0000    00b8 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	ff28 0030 019f 0071 0016 0003 ffec 0001 
	ffd4 0011 0073 ffe8 fffc fff6 fff4 0001 
	fff9 000f ffff 0030 0080 ffef 0036 0005 
	0008 0007 ffff 0001 fffd 0000 fffc 0002 
	ffed 0002 ffef ff9b ffca fff8 ffe9 fff3 
	fffc fffe ffff 0003 ffff ffff fff4 0002 
	fff6 0011 0007 0003 0002 0003 ffff 0001 
	0003 000f 0001 fffd fffb fffb fffb fffd 

[Cr]:
	fe3d fff7 0209 0168 ffe3 ffff 0003 0003 
	ffcd 00a2 ffee ffd7 000b 0010 0001 ffff 
	0006 0020 000b fff7 ff6f ff45 0002 ffff 
	001b 000a fffd ffff 0000 0001 fff9 0006 
	0003 ffef fff1 ff7e ffea ffe7 fff5 0002 
	fff8 0004 0005 000e 0004 ffff 000b fffc 
	ffee 0003 001a 000d ffff 000d 0000 fff9 
	0017 0018 0012 fff5 ffef ffe6 fff8 ffed 

[MCU #0] Quantification:
[Y]:
	ffe7 0001 ffc3 fff7 fffe 0005 0000 0000    0003 0000 ffb5 0007 0000 0000 0000 0000 
	0007 000f 0029 0003 0002 0000 0002 0000    0000 001e ffed 0000 0000 0000 0000 0000 
	fffa 0000 0000 fff8 fff6 000b 0000 fffe    0000 0000 0000 0000 fffd 0000 0000 0000 
	fffe 0009 0001 0003 0000 0000 ffff 0001    0000 0000 0000 0000 0000 0000 0000 0000 
	0003 0006 0005 0000 0000 fffd 0000 fffb    0000 0000 0000 0003 0000 0000 0000 0000 
	fffc 0003 0000 0000 0001 0002 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0001 0000 ffff 0000 fffd 0000 0001 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	fffd 0000 0000 0000 0000 ffff 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 

	0024 0000 0000 0000 0000 0000 0000 0000    0024 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000    0000 0000 0000 0000 0000 0000 0000 0000 

[Cb]:
	ffd5 0009 003b 0008 0000 0000 0000 0000 
	fff8 0002 000e ffff 0000 0000 0000 0000 
	ffff 0001 0000 0001 0004 0000 0001 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 fffd ffff 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[Cr]:
	ffa6 ffff 004a 0019 0000 0000 0000 0000 
	fff6 001b fffe fffe 0000 0000 0000 0000 
	0000 0004 0000 0000 fffc fffa 0000 0000 
	0001 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 fffc 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 
	0000 0000 0000 0000 0000 0000 0000 0000 

[MCU #0] Compression AC/DC puis écriture dans le flux.
[acdc] block 0
DC:
	value = -25, magnitude = 5, index = 6
		bitstream => writing 6 over 3 bits
		bitstream => writing 6 over 5 bits

AC:
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = -61, magnitude = 6, index = 2
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 2 over 6 bits
	value = -9, magnitude = 4, index = 6
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 6 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 7 over 3 bits
	value = 15, magnitude = 4, index = 15
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 15 over 4 bits
	value = 41, magnitude = 6, index = 41
	RLE code = 6, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 41 over 6 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 2 over 2 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 1 over 3 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 36, huffman path = 4084, nbits = 12
		bitstream => writing 4084 over 12 bits
		bitstream => writing 7 over 4 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 5 over 4 bits
	value = 11, magnitude = 4, index = 11
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 11 over 4 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 2 bits
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 9 over 4 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 6, magnitude = 3, index = 6
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 6 over 3 bits
	value = 5, magnitude = 3, index = 5
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 5 over 3 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 34, huffman path = 249, nbits = 8
		bitstream => writing 249 over 8 bits
		bitstream => writing 0 over 2 bits
	value = -5, magnitude = 3, index = 2
	RLE code = 19, huffman path = 121, nbits = 7
		bitstream => writing 121 over 7 bits
		bitstream => writing 2 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 3 over 3 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 3 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 2 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 28, nbits = 5
		bitstream => writing 28 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 0 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 12, nbits = 4
		bitstream => writing 12 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 18, huffman path = 27, nbits = 5
		bitstream => writing 27 over 5 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 59, nbits = 6
		bitstream => writing 59 over 6 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 1
DC:
	value = 28, magnitude = 5, index = 28
		bitstream => writing 6 over 3 bits
		bitstream => writing 28 over 5 bits

AC:
	value = -75, magnitude = 7, index = 52
	RLE code = 23, huffman path = 65413, nbits = 16
		bitstream => writing 65413 over 16 bits
		bitstream => writing 52 over 7 bits
	value = 7, magnitude = 3, index = 7
	RLE code = 3, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 7 over 3 bits
	value = 30, magnitude = 5, index = 30
	RLE code = 85, huffman path = 65440, nbits = 16
		bitstream => writing 65440 over 16 bits
		bitstream => writing 30 over 5 bits
	value = -19, magnitude = 5, index = 12
	RLE code = 5, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 12 over 5 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 146, huffman path = 65470, nbits = 16
		bitstream => writing 65470 over 16 bits
		bitstream => writing 0 over 2 bits
	value = 3, magnitude = 2, index = 3
	RLE code = 226, huffman path = 65516, nbits = 16
		bitstream => writing 65516 over 16 bits
		bitstream => writing 3 over 2 bits
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 2
DC:
	value = 33, magnitude = 6, index = 33
		bitstream => writing 14 over 4 bits
		bitstream => writing 33 over 6 bits

AC:
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 3
DC:
	value = 0, magnitude = 0, index = 0
		bitstream => writing 0 over 2 bits
		bitstream => writing 0 over 0 bits

AC:
	value = endofblock, huffman_path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
[acdc] block 0
DC:
	value = -43, magnitude = 6, index = 20
		bitstream => writing 62 over 6 bits
		bitstream => writing 20 over 6 bits

AC:
	value = 9, magnitude = 4, index = 9
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 9 over 4 bits
	value = 59, magnitude = 6, index = 59
	RLE code = 6, huffman path = 56, nbits = 6
		bitstream => writing 56 over 6 bits
		bitstream => writing 59 over 6 bits
	value = 8, magnitude = 4, index = 8
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 8 over 4 bits
	value = -8, magnitude = 4, index = 7
	RLE code = 68, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 7 over 4 bits
	value = 2, magnitude = 2, index = 2
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 2 over 2 bits
	value = 14, magnitude = 4, index = 14
	RLE code = 4, huffman path = 24, nbits = 5
		bitstream => writing 24 over 5 bits
		bitstream => writing 14 over 4 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 65, huffman path = 58, nbits = 6
		bitstream => writing 58 over 6 bits
		bitstream => writing 0 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 1 over 1 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 4 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 17, huffman path = 11, nbits = 4
		bitstream => writing 11 over 4 bits
		bitstream => writing 1 over 1 bits
	value = -3, magnitude = 2, index = 0
	RLE code = 194, huffman path = 65499, nbits = 16
		bitstream => writing 65499 over 16 bits
		bitstream => writing 0 over 2 bits
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
[acdc] block 0
DC:
	value = -90, magnitude = 7, index = 37
		bitstream => writing 126 over 7 bits
		bitstream => writing 37 over 7 bits

AC:
	value = -1, magnitude = 1, index = 0
	RLE code = 1, huffman path = 1, nbits = 2
		bitstream => writing 1 over 2 bits
		bitstream => writing 0 over 1 bits
	value = 74, magnitude = 7, index = 74
	RLE code = 7, huffman path = 120, nbits = 7
		bitstream => writing 120 over 7 bits
		bitstream => writing 74 over 7 bits
	value = 25, magnitude = 5, index = 25
	RLE code = 5, huffman path = 25, nbits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 25 over 5 bits
	value = -10, magnitude = 4, index = 5
	RLE code = 68, huffman path = 65432, nbits = 16
		bitstream => writing 65432 over 16 bits
		bitstream => writing 5 over 4 bits
	value = 27, magnitude = 5, index = 27
	RLE code = 5, huffman path = 25, nbits = 5
		bitstream => writing 25 over 5 bits
		bitstream => writing 27 over 5 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = -2, magnitude = 2, index = 1
	RLE code = 2, huffman path = 4, nbits = 3
		bitstream => writing 4 over 3 bits
		bitstream => writing 1 over 2 bits
	value = 4, magnitude = 3, index = 4
	RLE code = 83, huffman path = 65439, nbits = 16
		bitstream => writing 65439 over 16 bits
		bitstream => writing 4 over 3 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 35, huffman path = 1015, nbits = 10
		bitstream => writing 1015 over 10 bits
		bitstream => writing 3 over 3 bits
	value = -6, magnitude = 3, index = 1
	RLE code = 3, huffman path = 10, nbits = 4
		bitstream => writing 10 over 4 bits
		bitstream => writing 1 over 3 bits
	value = 1, magnitude = 1, index = 1
	RLE code = 33, huffman path = 26, nbits = 5
		bitstream => writing 26 over 5 bits
		bitstream => writing 1 over 1 bits
	value = -4, magnitude = 3, index = 3
	RLE code = 163, huffman path = 65482, nbits = 16
		bitstream => writing 65482 over 16 bits
		bitstream => writing 3 over 3 bits
	value = endofblock, huffman_path = 0, nbits = 2
		bitstream => writing 0 over 2 bits
